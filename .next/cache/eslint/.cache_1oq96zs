[{"C:\\Users\\mgenius\\Desktop\\PROGRAMMING\\CLIENT JOBS\\Teknesis_Kupon\\kupon_next\\pages\\404.js":"1","C:\\Users\\mgenius\\Desktop\\PROGRAMMING\\CLIENT JOBS\\Teknesis_Kupon\\kupon_next\\pages\\about.js":"2","C:\\Users\\mgenius\\Desktop\\PROGRAMMING\\CLIENT JOBS\\Teknesis_Kupon\\kupon_next\\pages\\admin_register.js":"3","C:\\Users\\mgenius\\Desktop\\PROGRAMMING\\CLIENT JOBS\\Teknesis_Kupon\\kupon_next\\pages\\api\\hello.js":"4","C:\\Users\\mgenius\\Desktop\\PROGRAMMING\\CLIENT JOBS\\Teknesis_Kupon\\kupon_next\\pages\\contact.js":"5","C:\\Users\\mgenius\\Desktop\\PROGRAMMING\\CLIENT JOBS\\Teknesis_Kupon\\kupon_next\\pages\\dashboard\\admin\\logistics\\index.js":"6","C:\\Users\\mgenius\\Desktop\\PROGRAMMING\\CLIENT JOBS\\Teknesis_Kupon\\kupon_next\\pages\\dashboard\\admin\\market\\index.js":"7","C:\\Users\\mgenius\\Desktop\\PROGRAMMING\\CLIENT JOBS\\Teknesis_Kupon\\kupon_next\\pages\\dashboard\\admin\\profile.js":"8","C:\\Users\\mgenius\\Desktop\\PROGRAMMING\\CLIENT JOBS\\Teknesis_Kupon\\kupon_next\\pages\\dashboard\\admin\\user.js":"9","C:\\Users\\mgenius\\Desktop\\PROGRAMMING\\CLIENT JOBS\\Teknesis_Kupon\\kupon_next\\pages\\dashboard\\user\\index.js":"10","C:\\Users\\mgenius\\Desktop\\PROGRAMMING\\CLIENT JOBS\\Teknesis_Kupon\\kupon_next\\pages\\dashboard\\user\\logistics.js":"11","C:\\Users\\mgenius\\Desktop\\PROGRAMMING\\CLIENT JOBS\\Teknesis_Kupon\\kupon_next\\pages\\dashboard\\user\\market.js":"12","C:\\Users\\mgenius\\Desktop\\PROGRAMMING\\CLIENT JOBS\\Teknesis_Kupon\\kupon_next\\pages\\dashboard\\user\\profile.js":"13","C:\\Users\\mgenius\\Desktop\\PROGRAMMING\\CLIENT JOBS\\Teknesis_Kupon\\kupon_next\\pages\\index.js":"14","C:\\Users\\mgenius\\Desktop\\PROGRAMMING\\CLIENT JOBS\\Teknesis_Kupon\\kupon_next\\pages\\login.js":"15","C:\\Users\\mgenius\\Desktop\\PROGRAMMING\\CLIENT JOBS\\Teknesis_Kupon\\kupon_next\\pages\\logistics\\index.js":"16","C:\\Users\\mgenius\\Desktop\\PROGRAMMING\\CLIENT JOBS\\Teknesis_Kupon\\kupon_next\\pages\\logistics\\send.js":"17","C:\\Users\\mgenius\\Desktop\\PROGRAMMING\\CLIENT JOBS\\Teknesis_Kupon\\kupon_next\\pages\\market\\index.js":"18","C:\\Users\\mgenius\\Desktop\\PROGRAMMING\\CLIENT JOBS\\Teknesis_Kupon\\kupon_next\\pages\\market\\sell.js":"19","C:\\Users\\mgenius\\Desktop\\PROGRAMMING\\CLIENT JOBS\\Teknesis_Kupon\\kupon_next\\pages\\market\\shop\\index.js":"20","C:\\Users\\mgenius\\Desktop\\PROGRAMMING\\CLIENT JOBS\\Teknesis_Kupon\\kupon_next\\pages\\market\\shop\\[product].js":"21","C:\\Users\\mgenius\\Desktop\\PROGRAMMING\\CLIENT JOBS\\Teknesis_Kupon\\kupon_next\\pages\\register.js":"22","C:\\Users\\mgenius\\Desktop\\PROGRAMMING\\CLIENT JOBS\\Teknesis_Kupon\\kupon_next\\pages\\_app.js":"23","C:\\Users\\mgenius\\Desktop\\PROGRAMMING\\CLIENT JOBS\\Teknesis_Kupon\\kupon_next\\pages\\_document.js":"24","C:\\Users\\mgenius\\Desktop\\PROGRAMMING\\CLIENT JOBS\\Teknesis_Kupon\\kupon_next\\components\\admin\\Layout.js":"25","C:\\Users\\mgenius\\Desktop\\PROGRAMMING\\CLIENT JOBS\\Teknesis_Kupon\\kupon_next\\components\\chart.js":"26","C:\\Users\\mgenius\\Desktop\\PROGRAMMING\\CLIENT JOBS\\Teknesis_Kupon\\kupon_next\\components\\Confirmation.js":"27","C:\\Users\\mgenius\\Desktop\\PROGRAMMING\\CLIENT JOBS\\Teknesis_Kupon\\kupon_next\\components\\Footer.js":"28","C:\\Users\\mgenius\\Desktop\\PROGRAMMING\\CLIENT JOBS\\Teknesis_Kupon\\kupon_next\\components\\Layout.js":"29","C:\\Users\\mgenius\\Desktop\\PROGRAMMING\\CLIENT JOBS\\Teknesis_Kupon\\kupon_next\\components\\mainNav\\mainHeader.js":"30","C:\\Users\\mgenius\\Desktop\\PROGRAMMING\\CLIENT JOBS\\Teknesis_Kupon\\kupon_next\\components\\mainNav\\mobileHeader.js":"31","C:\\Users\\mgenius\\Desktop\\PROGRAMMING\\CLIENT JOBS\\Teknesis_Kupon\\kupon_next\\components\\mainNav\\Nav.js":"32","C:\\Users\\mgenius\\Desktop\\PROGRAMMING\\CLIENT JOBS\\Teknesis_Kupon\\kupon_next\\components\\mainNav\\search.js":"33","C:\\Users\\mgenius\\Desktop\\PROGRAMMING\\CLIENT JOBS\\Teknesis_Kupon\\kupon_next\\components\\mainNav\\topHeader.js":"34","C:\\Users\\mgenius\\Desktop\\PROGRAMMING\\CLIENT JOBS\\Teknesis_Kupon\\kupon_next\\components\\marketNav\\mainHeader.js":"35","C:\\Users\\mgenius\\Desktop\\PROGRAMMING\\CLIENT JOBS\\Teknesis_Kupon\\kupon_next\\components\\marketNav\\mobileHeader.js":"36","C:\\Users\\mgenius\\Desktop\\PROGRAMMING\\CLIENT JOBS\\Teknesis_Kupon\\kupon_next\\components\\marketNav\\Nav.js":"37","C:\\Users\\mgenius\\Desktop\\PROGRAMMING\\CLIENT JOBS\\Teknesis_Kupon\\kupon_next\\components\\marketNav\\search.js":"38","C:\\Users\\mgenius\\Desktop\\PROGRAMMING\\CLIENT JOBS\\Teknesis_Kupon\\kupon_next\\components\\marketNav\\topHeader.js":"39","C:\\Users\\mgenius\\Desktop\\PROGRAMMING\\CLIENT JOBS\\Teknesis_Kupon\\kupon_next\\components\\nav\\mainHeader.js":"40","C:\\Users\\mgenius\\Desktop\\PROGRAMMING\\CLIENT JOBS\\Teknesis_Kupon\\kupon_next\\components\\nav\\mobileHeader.js":"41","C:\\Users\\mgenius\\Desktop\\PROGRAMMING\\CLIENT JOBS\\Teknesis_Kupon\\kupon_next\\components\\nav\\Nav.js":"42","C:\\Users\\mgenius\\Desktop\\PROGRAMMING\\CLIENT JOBS\\Teknesis_Kupon\\kupon_next\\components\\nav\\search.js":"43","C:\\Users\\mgenius\\Desktop\\PROGRAMMING\\CLIENT JOBS\\Teknesis_Kupon\\kupon_next\\components\\nav\\topHeader.js":"44","C:\\Users\\mgenius\\Desktop\\PROGRAMMING\\CLIENT JOBS\\Teknesis_Kupon\\kupon_next\\components\\user\\Layout.js":"45"},{"size":903,"mtime":1680531963276,"results":"46","hashOfConfig":"47"},{"size":7481,"mtime":1683296759593,"results":"48","hashOfConfig":"47"},{"size":9604,"mtime":1681921123436,"results":"49","hashOfConfig":"47"},{"size":170,"mtime":1656560824156,"results":"50","hashOfConfig":"47"},{"size":8311,"mtime":1682996368054,"results":"51","hashOfConfig":"47"},{"size":9556,"mtime":1682091321318,"results":"52","hashOfConfig":"47"},{"size":6819,"mtime":1682235327404,"results":"53","hashOfConfig":"47"},{"size":3238,"mtime":1681921355614,"results":"54","hashOfConfig":"47"},{"size":4863,"mtime":1682235351154,"results":"55","hashOfConfig":"47"},{"size":3919,"mtime":1680532187645,"results":"56","hashOfConfig":"47"},{"size":3468,"mtime":1682953702272,"results":"57","hashOfConfig":"47"},{"size":5652,"mtime":1682097388253,"results":"58","hashOfConfig":"47"},{"size":3378,"mtime":1680969299400,"results":"59","hashOfConfig":"47"},{"size":9719,"mtime":1683296588002,"results":"60","hashOfConfig":"47"},{"size":4877,"mtime":1682949877347,"results":"61","hashOfConfig":"47"},{"size":12723,"mtime":1683299289341,"results":"62","hashOfConfig":"47"},{"size":18782,"mtime":1682437727891,"results":"63","hashOfConfig":"47"},{"size":11624,"mtime":1683098213977,"results":"64","hashOfConfig":"47"},{"size":11543,"mtime":1682717596987,"results":"65","hashOfConfig":"47"},{"size":11574,"mtime":1683103828143,"results":"66","hashOfConfig":"47"},{"size":6752,"mtime":1681915635212,"results":"67","hashOfConfig":"47"},{"size":10203,"mtime":1682949801241,"results":"68","hashOfConfig":"47"},{"size":854,"mtime":1680600740498,"results":"69","hashOfConfig":"47"},{"size":2459,"mtime":1683213665796,"results":"70","hashOfConfig":"47"},{"size":5639,"mtime":1682085223323,"results":"71","hashOfConfig":"47"},{"size":748,"mtime":1682068664387,"results":"72","hashOfConfig":"47"},{"size":1282,"mtime":1681317078518,"results":"73","hashOfConfig":"47"},{"size":4910,"mtime":1681915745351,"results":"74","hashOfConfig":"47"},{"size":1228,"mtime":1682996570702,"results":"75","hashOfConfig":"47"},{"size":1339,"mtime":1682685755391,"results":"76","hashOfConfig":"47"},{"size":20365,"mtime":1680536399502,"results":"77","hashOfConfig":"47"},{"size":478,"mtime":1681883717361,"results":"78","hashOfConfig":"47"},{"size":858,"mtime":1680536835810,"results":"79","hashOfConfig":"47"},{"size":1161,"mtime":1680536585617,"results":"80","hashOfConfig":"47"},{"size":11949,"mtime":1683299951597,"results":"81","hashOfConfig":"47"},{"size":20443,"mtime":1680535551090,"results":"82","hashOfConfig":"47"},{"size":474,"mtime":1680536174189,"results":"83","hashOfConfig":"47"},{"size":858,"mtime":1680536656675,"results":"84","hashOfConfig":"47"},{"size":1062,"mtime":1681831810199,"results":"85","hashOfConfig":"47"},{"size":11225,"mtime":1683299937921,"results":"86","hashOfConfig":"47"},{"size":20443,"mtime":1680532618977,"results":"87","hashOfConfig":"47"},{"size":427,"mtime":1680535234337,"results":"88","hashOfConfig":"47"},{"size":858,"mtime":1680532658409,"results":"89","hashOfConfig":"47"},{"size":1057,"mtime":1681831864928,"results":"90","hashOfConfig":"47"},{"size":5930,"mtime":1681321518703,"results":"91","hashOfConfig":"47"},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1c17gg5",{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101"},{"filePath":"102","messages":"103","suppressedMessages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","suppressedMessages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","suppressedMessages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111"},{"filePath":"112","messages":"113","suppressedMessages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115"},{"filePath":"116","messages":"117","suppressedMessages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","suppressedMessages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122"},{"filePath":"123","messages":"124","suppressedMessages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126"},{"filePath":"127","messages":"128","suppressedMessages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130"},{"filePath":"131","messages":"132","suppressedMessages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134"},{"filePath":"135","messages":"136","suppressedMessages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","suppressedMessages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"141","messages":"142","suppressedMessages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144"},{"filePath":"145","messages":"146","suppressedMessages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"148","messages":"149","suppressedMessages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151"},{"filePath":"152","messages":"153","suppressedMessages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155"},{"filePath":"156","messages":"157","suppressedMessages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159"},{"filePath":"160","messages":"161","suppressedMessages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163"},{"filePath":"164","messages":"165","suppressedMessages":"166","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167"},{"filePath":"168","messages":"169","suppressedMessages":"170","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171"},{"filePath":"172","messages":"173","suppressedMessages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"175","messages":"176","suppressedMessages":"177","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"178","messages":"179","suppressedMessages":"180","errorCount":0,"fatalErrorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181"},{"filePath":"182","messages":"183","suppressedMessages":"184","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"185","messages":"186","suppressedMessages":"187","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"188","messages":"189","suppressedMessages":"190","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"191","messages":"192","suppressedMessages":"193","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"194","messages":"195","suppressedMessages":"196","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197"},{"filePath":"198","messages":"199","suppressedMessages":"200","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"201","messages":"202","suppressedMessages":"203","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"204","messages":"205","suppressedMessages":"206","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"207","messages":"208","suppressedMessages":"209","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"210","messages":"211","suppressedMessages":"212","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"213","messages":"214","suppressedMessages":"215","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"216","messages":"217","suppressedMessages":"218","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"219","messages":"220","suppressedMessages":"221","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"222","messages":"223","suppressedMessages":"224","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"225","messages":"226","suppressedMessages":"227","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"228","messages":"229","suppressedMessages":"230","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"231","messages":"232","suppressedMessages":"233","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"234","messages":"235","suppressedMessages":"236","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"237","messages":"238","suppressedMessages":"239","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"240","messages":"241","suppressedMessages":"242","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"243"},"C:\\Users\\mgenius\\Desktop\\PROGRAMMING\\CLIENT JOBS\\Teknesis_Kupon\\kupon_next\\pages\\404.js",[],[],"C:\\Users\\mgenius\\Desktop\\PROGRAMMING\\CLIENT JOBS\\Teknesis_Kupon\\kupon_next\\pages\\about.js",["244","245","246","247","248","249"],[],"C:\\Users\\mgenius\\Desktop\\PROGRAMMING\\CLIENT JOBS\\Teknesis_Kupon\\kupon_next\\pages\\admin_register.js",["250","251"],[],"import React, { useState } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport Layout from '../components/Layout';\r\n// import { useMutation } from 'react-query';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { useRouter } from 'next/router';\r\n\r\nexport default function AdminRegister() {\r\n  const [data, setData] = useState({\r\n    admin: 'yes',\r\n  });\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const router = useRouter();\r\n\r\n  const {\r\n    handleSubmit,\r\n    register,\r\n    formState: { errors },\r\n  } = useForm();\r\n\r\n  const handleInputChange = (e) => {\r\n    setData({ ...data, [e.target.name]: e.target.value });\r\n  };\r\n  const submitNewUser = async () => {\r\n    if (data.password !== '' && data.cpassword !== '') {\r\n      if (data.password == data.cpassword) {\r\n        // addUserMutation.mutate(data);\r\n        setIsLoading(true);\r\n        try {\r\n          const response = await fetch('/user/register', {\r\n            method: 'POST',\r\n            headers: {\r\n              'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(data),\r\n          });\r\n\r\n          if (!response.ok) {\r\n            const res = await response.json();\r\n            setIsLoading(false);\r\n            throw new Error(res.msg);\r\n          }\r\n          const res = await response.json();\r\n          toast.success('successful');\r\n          localStorage.setItem('token', res);\r\n          setIsLoading(false);\r\n          router.push('/dashboard/admin/profile');\r\n        } catch (err) {\r\n          setIsLoading(false);\r\n          toast.error(err.message);\r\n        }\r\n        // return res;\r\n      } else {\r\n        toast.error('password and confirm password are not equal');\r\n      }\r\n    } else {\r\n      toast.error('please fill in the details correctly');\r\n    }\r\n  };\r\n  return (\r\n    <Layout title=\"Register\">\r\n      <div id=\"page-content\">\r\n        <img\r\n          src=\"/images/kupon logo with text (1).png\"\r\n          width={100}\r\n          className=\"mx-4 my-2\"\r\n        />\r\n        <div className=\"page section-header text-center\">\r\n          <div className=\"page-title\">\r\n            <div className=\"wrapper\">\r\n              <h1 className=\"page-width\">Create an Account (Admin)</h1>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-12 col-sm-12 col-md-6 col-lg-6 main-col offset-md-3\">\r\n              <div className=\"mb-4\">\r\n                <form\r\n                  onSubmit={handleSubmit(submitNewUser)}\r\n                  id=\"CustomerLoginForm\"\r\n                  className=\"contact-form\"\r\n                >\r\n                  <div className=\"row\">\r\n                    <div className=\"col-12 col-sm-12 col-md-12 col-lg-12\">\r\n                      <div className=\"form-group\">\r\n                        <label htmlFor=\"FirstName\">First Name *</label>\r\n                        <input\r\n                          type=\"text\"\r\n                          name=\"firstName\"\r\n                          placeholder=\"\"\r\n                          id=\"firstName\"\r\n                          required\r\n                          onChange={handleInputChange}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-12 col-md-12 col-lg-12\">\r\n                      <div className=\"form-group\">\r\n                        <label htmlFor=\"LastName\">Last Name *</label>\r\n                        <input\r\n                          type=\"text\"\r\n                          name=\"lastName\"\r\n                          placeholder=\"\"\r\n                          id=\"LastName\"\r\n                          required\r\n                          onChange={handleInputChange}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-12 col-md-12 col-lg-12\">\r\n                      <div className=\"form-group\">\r\n                        <label htmlFor=\"input-telephone\">\r\n                          Telephone <span className=\"required-f\">*</span>\r\n                        </label>\r\n                        <input\r\n                          name=\"telephone\"\r\n                          id=\"input-telephone\"\r\n                          type=\"tel\"\r\n                          required\r\n                          {...register('telephone', {\r\n                            required: 'Please enter telephone number',\r\n                            minLength: {\r\n                              value: 11,\r\n                              message:\r\n                                'telephone number must be exacty 11 numbers',\r\n                            },\r\n                            maxLength: {\r\n                              value: 11,\r\n                              message:\r\n                                'telephone number must be exacty 11 numbers',\r\n                            },\r\n                          })}\r\n                          onChange={handleInputChange}\r\n                        />\r\n                        {errors.telephone && (\r\n                          <div className=\"text-danger text-center\">\r\n                            {errors.telephone.message}\r\n                          </div>\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-12 col-md-12 col-lg-12\">\r\n                      <div className=\"form-group\">\r\n                        <label htmlFor=\"input-address-1\">\r\n                          Address <span className=\"required-f\">*</span>\r\n                        </label>\r\n                        <input\r\n                          name=\"address\"\r\n                          id=\"input-address-1\"\r\n                          type=\"text\"\r\n                          required\r\n                          onChange={handleInputChange}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-12 col-md-12 col-lg-12\">\r\n                      <div className=\"form-group\">\r\n                        <label htmlFor=\"CustomerEmail\">Email *</label>\r\n                        <input\r\n                          type=\"email\"\r\n                          name=\"email\"\r\n                          placeholder=\"\"\r\n                          {...register('email', {\r\n                            required: 'Please enter email',\r\n                            pattern: {\r\n                              value:\r\n                                /^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+.[a-zA-Z0-9-.]+$/i,\r\n                              message: 'Please enter valid email',\r\n                            },\r\n                          })}\r\n                          onChange={handleInputChange}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-12 col-md-12 col-lg-12\">\r\n                      <div className=\"form-group\">\r\n                        <label htmlFor=\"CustomerPassword\">Password *</label>\r\n                        <input\r\n                          type=\"password\"\r\n                          defaultValue=\"\"\r\n                          name=\"password\"\r\n                          id=\"password\"\r\n                          {...register('password', {\r\n                            required: 'Please enter password',\r\n                            minLength: {\r\n                              value: 6,\r\n                              message:\r\n                                'password should be more than 6 characters',\r\n                            },\r\n                          })}\r\n                          onChange={handleInputChange}\r\n                        />\r\n                        {errors.password && (\r\n                          <div className=\"text-danger text-center\">\r\n                            {errors.password.message}\r\n                          </div>\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-12 col-md-12 col-lg-12\">\r\n                      <div className=\"form-group\">\r\n                        <label htmlFor=\"CustomerPassword\">\r\n                          Confirm Password\r\n                        </label>\r\n                        <input\r\n                          type=\"password\"\r\n                          defaultValue=\"\"\r\n                          name=\"cpassword\"\r\n                          id=\"password\"\r\n                          placeholder=\"confirm password\"\r\n                          onChange={handleInputChange}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"row\">\r\n                    <div className=\"text-center col-12 col-sm-12 col-md-12 col-lg-12\">\r\n                      {isLoading ? (\r\n                        <input\r\n                          className=\"btn mb-3\"\r\n                          value=\"loading...\"\r\n                          disabled\r\n                        />\r\n                      ) : (\r\n                        <input\r\n                          type=\"submit\"\r\n                          className=\"btn mb-3\"\r\n                          value=\"submit\"\r\n                        />\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Layout>\r\n  );\r\n}\r\n","C:\\Users\\mgenius\\Desktop\\PROGRAMMING\\CLIENT JOBS\\Teknesis_Kupon\\kupon_next\\pages\\api\\hello.js",[],[],"C:\\Users\\mgenius\\Desktop\\PROGRAMMING\\CLIENT JOBS\\Teknesis_Kupon\\kupon_next\\pages\\contact.js",[],[],"C:\\Users\\mgenius\\Desktop\\PROGRAMMING\\CLIENT JOBS\\Teknesis_Kupon\\kupon_next\\pages\\dashboard\\admin\\logistics\\index.js",["252","253"],[],"import React, { useState, useEffect } from 'react';\r\nimport { shortenString } from '../../../../utils/stringManipulation';\r\nimport UserLayout from '../../../../components/admin/Layout';\r\nimport { Modal, Button } from 'react-bootstrap';\r\nimport ConfirmationInput from '../../../../components/Confirmation';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { useRouter } from 'next/router';\r\nimport { Carousel } from 'react-bootstrap';\r\nconst UserLogistics = () => {\r\n  const [token] = useState(() => {\r\n    if (typeof window !== 'undefined') {\r\n      return localStorage.getItem('token');\r\n    }\r\n  });\r\n\r\n  const router = useRouter();\r\n  const [data, setData] = useState([]);\r\n  // const [items, setItems] = useState([]);\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [modalData, setModalData] = useState();\r\n\r\n  //to display confirmation input\r\n  const [confirmation, setConfirmation] = useState(false);\r\n  const [hideConfirmationModal, setHideConfirmationModal] = useState(true);\r\n  //update status\r\n  const [isLoadingUpdateStatus, setIsLoadingUpdateStatus] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const fetchLogistics = async () => {\r\n      try {\r\n        console.log(data);\r\n        const response = await fetch('/admin/logistics', {\r\n          method: 'GET',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        });\r\n\r\n        if (!response.ok) {\r\n          const res = await response.json();\r\n          throw new Error(res.msg);\r\n        }\r\n        const res = await response.json();\r\n        setData(res.msg);\r\n        console.log(res.msg);\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    };\r\n    fetchLogistics();\r\n  }, []);\r\n\r\n  const handleModalOpen = (item) => {\r\n    setShowModal(true);\r\n    setModalData(item);\r\n  };\r\n  const handleModalClose = () => setShowModal(false);\r\n\r\n  const updateStatus = async () => {\r\n    setIsLoadingUpdateStatus(true);\r\n    try {\r\n      const response = await fetch('/admin/logistics/update_status', {\r\n        method: 'PATCH',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n        body: JSON.stringify({\r\n          id: modalData?.id,\r\n          status: modalData?.status == 'pending' ? 'in transit' : 'delivered',\r\n        }),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        setIsLoadingUpdateStatus(false);\r\n        const res = await response.json();\r\n        throw new Error(res?.msg);\r\n      }\r\n      const res = await response.json();\r\n      toast.success(res?.msg);\r\n      setIsLoadingUpdateStatus(false);\r\n      router.reload();\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <UserLayout>\r\n      <div className=\"table-responsive\">\r\n        <h1>\r\n          LOGISTICS ORDER : <b>{data.length}</b>\r\n        </h1>\r\n        <table className=\"table table-striped\">\r\n          <thead>\r\n            <tr>\r\n              <th scope=\"col\">Shipment ID</th>\r\n              <th scope=\"col\">Address(Sender)</th>\r\n              <th scope=\"col\">Address(receiver)</th>\r\n              <th scope=\"col\">Status</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {data?.map((item) => (\r\n              <tr\r\n                key={item?.id}\r\n                onClick={() => handleModalOpen(item)}\r\n                style={{ cursor: 'pointer' }}\r\n              >\r\n                <td>{item?.id}</td>\r\n                <td>{shortenString(item?.pickupAddress, 20)}</td>\r\n                <td>{shortenString(item?.deliveryAddress, 20)}</td>\r\n                <td\r\n                  style={{\r\n                    color:\r\n                      item?.status == 'pending'\r\n                        ? 'red'\r\n                        : item?.status == 'in transit'\r\n                        ? '#f1c40f'\r\n                        : 'green',\r\n                  }}\r\n                >\r\n                  {item?.status}\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n\r\n      <div style={{ overflow: 'auto' }}>\r\n        <Modal show={showModal} onHide={handleModalClose}>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>Logistics Details</Modal.Title>\r\n            <br />\r\n            {isLoadingUpdateStatus ? (\r\n              <button\r\n                style={{\r\n                  backgroundColor:\r\n                    modalData?.status == 'pending'\r\n                      ? 'red'\r\n                      : modalData?.status == 'in transit'\r\n                      ? '#f1c40f'\r\n                      : 'green',\r\n                  color: 'white',\r\n                  padding: '2px 10px',\r\n                  borderRadius: '5px',\r\n                  cursor: 'pointer',\r\n                }}\r\n                onClick={() => setConfirmation(true)}\r\n                disabled={modalData?.status == 'delivered' ? true : false}\r\n              >\r\n                ...\r\n              </button>\r\n            ) : (\r\n              <button\r\n                style={{\r\n                  backgroundColor:\r\n                    modalData?.status == 'pending'\r\n                      ? 'red'\r\n                      : modalData?.status == 'in transit'\r\n                      ? '#f1c40f'\r\n                      : 'green',\r\n                  color: 'white',\r\n                  padding: '2px 3px',\r\n                  borderRadius: '5px',\r\n                  cursor: 'pointer',\r\n                }}\r\n                onClick={() => setConfirmation(true)}\r\n                disabled={modalData?.status == 'delivered' ? true : false}\r\n              >\r\n                {modalData?.status}\r\n              </button>\r\n            )}\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <Carousel className=\"w-screen\">\r\n              {typeof modalData?.files == 'string'\r\n                ? JSON.parse(modalData?.files).map((image, index) => (\r\n                    <Carousel.Item key={index}>\r\n                      <img\r\n                        className=\"d-block w-100\"\r\n                        src={`data:image/png;base64,${image}`}\r\n                        alt={`Product ${modalData.title}`}\r\n                        style={{ height: 'auto' }}\r\n                      />\r\n                    </Carousel.Item>\r\n                  ))\r\n                : null}\r\n            </Carousel>{' '}\r\n            <br />\r\n            <table className=\"table\">\r\n              <thead>Sender Details</thead>\r\n              <tbody>\r\n                <tr>\r\n                  <th>Shipment ID</th>\r\n                  <td>{modalData?.id}</td>\r\n                </tr>\r\n                <tr>\r\n                  <th>Name</th>\r\n                  <td>\r\n                    {modalData?.firstName} {modalData?.lastName}\r\n                  </td>\r\n                </tr>\r\n                <tr>\r\n                  <th>Email</th>\r\n                  <td>{modalData?.email}</td>\r\n                </tr>\r\n                <tr>\r\n                  <th>Telephone</th>\r\n                  <td>{modalData?.telephone}</td>\r\n                </tr>\r\n                <tr>\r\n                  <th>Pick up address</th>\r\n                  <td>{modalData?.pickupAddress}</td>\r\n                </tr>\r\n                <tr>\r\n                  <th>Pick up city</th>\r\n                  <td>{modalData?.pickupCity}</td>\r\n                </tr>\r\n                <tr>\r\n                  <th>Pick up state</th>\r\n                  <td>{modalData?.pickupState}</td>\r\n                </tr>\r\n              </tbody>\r\n              <hr />\r\n              <thead>Receiver Details</thead>\r\n              <tbody>\r\n                <tr>\r\n                  <th>Name</th>\r\n                  <td>\r\n                    {modalData?.firstName} {modalData?.lastName}\r\n                  </td>\r\n                </tr>\r\n                <tr>\r\n                  <th>Email</th>\r\n                  <td>{modalData?.email}</td>\r\n                </tr>\r\n                <tr>\r\n                  <th>Delivery address</th>\r\n                  <td>{modalData?.deliveryAddress}</td>\r\n                </tr>\r\n                <tr>\r\n                  <th>Delivery city</th>\r\n                  <td>{modalData?.deliveryCity}</td>\r\n                </tr>\r\n                <tr>\r\n                  <th>Delivery state</th>\r\n                  <td>{modalData?.deliveryState}</td>\r\n                </tr>\r\n              </tbody>\r\n              <tfoot>\r\n                <th>Package Code</th>\r\n                <td>{modalData?.receiverCode}</td>\r\n              </tfoot>\r\n            </table>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button variant=\"secondary\" onClick={handleModalClose}>\r\n              Close\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n\r\n        {confirmation ? (\r\n          <Modal show={hideConfirmationModal}>\r\n            <ConfirmationInput\r\n              setConfirmation={setConfirmation}\r\n              action={updateStatus}\r\n              title={`to update logistics status '${\r\n                modalData?.status == 'pending' ? 'in transit' : 'delivered'\r\n              }'`}\r\n            />\r\n            <Modal.Footer>\r\n              <Button\r\n                variant=\"error\"\r\n                onClick={() => setHideConfirmationModal(false)}\r\n              >\r\n                Close\r\n              </Button>\r\n            </Modal.Footer>\r\n          </Modal>\r\n        ) : null}\r\n      </div>\r\n    </UserLayout>\r\n  );\r\n};\r\n\r\nexport default UserLogistics;\r\n","C:\\Users\\mgenius\\Desktop\\PROGRAMMING\\CLIENT JOBS\\Teknesis_Kupon\\kupon_next\\pages\\dashboard\\admin\\market\\index.js",["254","255"],[],"import React, { useState, useEffect } from 'react';\r\nimport UserLayout from '../../../../components/admin/Layout';\r\nimport { Modal, Button } from 'react-bootstrap';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n// import { useRouter } from 'next/router';\r\nimport { Carousel } from 'react-bootstrap';\r\nconst UserLogistics = () => {\r\n  const [token] = useState(() => {\r\n    if (typeof window !== 'undefined') {\r\n      return localStorage.getItem('token');\r\n    }\r\n  });\r\n\r\n  const [data, setData] = useState([]);\r\n  // const [items, setItems] = useState([]);\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [modalData, setModalData] = useState();\r\n\r\n  useEffect(() => {\r\n    const fetchLogistics = async () => {\r\n      try {\r\n        console.log(data);\r\n        const response = await fetch('/admin/market', {\r\n          method: 'GET',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        });\r\n\r\n        if (!response.ok) {\r\n          const res = await response.json();\r\n          throw new Error(res.msg);\r\n        }\r\n        const res = await response.json();\r\n        setData(res.msg);\r\n        console.log(res.msg);\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    };\r\n    fetchLogistics();\r\n  }, []);\r\n\r\n  const handleModalOpen = (item) => {\r\n    setShowModal(true);\r\n    setModalData(item);\r\n  };\r\n  const handleModalClose = () => setShowModal(false);\r\n\r\n  return (\r\n    <UserLayout>\r\n      <div className=\"table-responsive\">\r\n        <h1>\r\n          MARKET TABLE : <b>{data.length}</b>\r\n        </h1>\r\n        <table className=\"table table-striped\">\r\n          <thead>\r\n            <tr>\r\n              <th scope=\"col\">PRODUCT ID</th>\r\n              <th scope=\"col\">TITLE</th>\r\n              <th scope=\"col\">CONDITIONS</th>\r\n              <th scope=\"col\">Price</th>\r\n              <th scope=\"col\">Paid</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {data?.map((item) => (\r\n              <tr\r\n                key={item?.id}\r\n                onClick={() => handleModalOpen(item)}\r\n                style={{ cursor: 'pointer' }}\r\n              >\r\n                <td>{item?.id}</td>\r\n                <td>{item?.title}</td>\r\n                <td>{item?.conditions}</td>\r\n                <td>{item?.price}</td>\r\n                <td>\r\n                  <b style={{ color: `${item?.paid ? 'green' : 'red'}` }}>\r\n                    {' '}\r\n                    {item?.paid ? 'true' : 'false'}{' '}\r\n                  </b>\r\n                </td>\r\n                <td\r\n                  style={{\r\n                    color:\r\n                      item?.status == 'pending'\r\n                        ? 'red'\r\n                        : item?.status == 'in transit'\r\n                        ? '#f1c40f'\r\n                        : 'green',\r\n                  }}\r\n                >\r\n                  {item?.status}\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n\r\n      <div style={{ overflow: 'auto' }}>\r\n        <Modal show={showModal} onHide={handleModalClose}>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title\r\n              style={{\r\n                fontSize: '1.3rem',\r\n                fontWeight: 'bold',\r\n                lineHeight: '1.5',\r\n                color: '#3c171773',\r\n              }}\r\n            >\r\n              Market Details\r\n            </Modal.Title>\r\n            <br />\r\n\r\n            <button\r\n              style={{\r\n                backgroundColor: modalData?.paid ? 'green' : 'red',\r\n                color: 'white',\r\n                padding: '2px 3px',\r\n                borderRadius: '5px',\r\n                cursor: 'pointer',\r\n              }}\r\n              disabled={modalData?.status == 'delivered' ? true : false}\r\n            >\r\n              {modalData?.paid ? 'paid' : 'not paid'}\r\n            </button>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <Carousel className=\"w-screen\">\r\n              {typeof modalData?.files == 'string'\r\n                ? JSON.parse(modalData?.files).map((image, index) => (\r\n                    <Carousel.Item key={index}>\r\n                      <img\r\n                        className=\"d-block w-100\"\r\n                        src={`data:image/png;base64,${image}`}\r\n                        alt={`Product ${modalData.title}`}\r\n                        style={{ height: 'auto' }}\r\n                      />\r\n                    </Carousel.Item>\r\n                  ))\r\n                : null}\r\n            </Carousel>{' '}\r\n            <br />\r\n            <table className=\"table\">\r\n              <thead\r\n                style={{\r\n                  fontSize: '1.3rem',\r\n                  fontWeight: 'bold',\r\n                  lineHeight: '1.5',\r\n                }}\r\n              >\r\n                Product&nbsp;Details\r\n              </thead>{' '}\r\n              <br />\r\n              <tbody>\r\n                <tr>\r\n                  <th>SELLER ID</th>\r\n                  <td>{modalData?.sellerId}</td>\r\n                </tr>\r\n                <tr>\r\n                  <th>PRODUCT ID</th>\r\n                  <td>{modalData?.id}</td>\r\n                </tr>\r\n                <tr>\r\n                  <th>Category</th>\r\n                  <td>{modalData?.category}</td>\r\n                </tr>\r\n                <tr>\r\n                  <th>Conditions</th>\r\n                  <td>{modalData?.conditions}</td>\r\n                </tr>\r\n                <tr>\r\n                  <th>Location</th>\r\n                  <td>{modalData?.location}</td>\r\n                </tr>\r\n                <tr>\r\n                  <th>City</th>\r\n                  <td>{modalData?.city}</td>\r\n                </tr>\r\n                <tr>\r\n                  <th>State</th>\r\n                  <td>{modalData?.state}</td>\r\n                </tr>\r\n                <tr>\r\n                  <th>Material</th>\r\n                  <td>{modalData?.material}</td>\r\n                </tr>\r\n                <tr>\r\n                  <th>Price</th>\r\n                  <td>{modalData?.price}</td>\r\n                </tr>\r\n              </tbody>\r\n              <hr />\r\n              <tfoot>\r\n                <th>Date Created</th>\r\n                <td>{new Date(modalData?.created_at).toLocaleString()}</td>\r\n              </tfoot>\r\n              <tfoot>\r\n                <th>Description</th>\r\n                <td>{modalData?.description}</td>\r\n              </tfoot>\r\n            </table>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button variant=\"secondary\" onClick={handleModalClose}>\r\n              Close\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      </div>\r\n    </UserLayout>\r\n  );\r\n};\r\n\r\nexport default UserLogistics;\r\n","C:\\Users\\mgenius\\Desktop\\PROGRAMMING\\CLIENT JOBS\\Teknesis_Kupon\\kupon_next\\pages\\dashboard\\admin\\profile.js",[],[],"C:\\Users\\mgenius\\Desktop\\PROGRAMMING\\CLIENT JOBS\\Teknesis_Kupon\\kupon_next\\pages\\dashboard\\admin\\user.js",["256"],[],"import React, { useState, useEffect } from 'react';\r\nimport UserLayout from '../../../components/admin/Layout';\r\nimport { Modal, Button } from 'react-bootstrap';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n// import { Carousel } from 'react-bootstrap';\r\nimport { shortenString } from '../../../utils/stringManipulation';\r\n\r\nconst UserLogistics = () => {\r\n  const [token] = useState(() => {\r\n    if (typeof window !== 'undefined') {\r\n      return localStorage.getItem('token');\r\n    }\r\n  });\r\n\r\n  const [data, setData] = useState([]);\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [modalData, setModalData] = useState();\r\n\r\n  useEffect(() => {\r\n    const fetchLogistics = async () => {\r\n      try {\r\n        console.log(data);\r\n        const response = await fetch('/admin/user', {\r\n          method: 'GET',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        });\r\n\r\n        if (!response.ok) {\r\n          const res = await response.json();\r\n          throw new Error(res.msg);\r\n        }\r\n        const res = await response.json();\r\n        setData(res.msg);\r\n        console.log(res.msg);\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    };\r\n    fetchLogistics();\r\n  }, []);\r\n\r\n  const handleModalOpen = (item) => {\r\n    setShowModal(true);\r\n    setModalData(item);\r\n  };\r\n  const handleModalClose = () => setShowModal(false);\r\n\r\n  return (\r\n    <UserLayout>\r\n      <div className=\"table-responsive\">\r\n        <h1>\r\n          PLATFORM USER : <b>{data.length}</b>\r\n        </h1>\r\n        <table className=\"table table-striped\">\r\n          <thead>\r\n            <tr>\r\n              <th scope=\"col\">ID</th>\r\n              <th scope=\"col\">FIRST NAME</th>\r\n              <th scope=\"col\">LAST NAME</th>\r\n              <th scope=\"col\">EMAIL</th>\r\n              <th scope=\"col\">TELEPHONE</th>\r\n              <th scope=\"col\">ADDRESS</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {data?.map((item) => (\r\n              <tr\r\n                key={item?.id}\r\n                onClick={() => handleModalOpen(item)}\r\n                style={{ cursor: 'pointer' }}\r\n              >\r\n                <td>{item?.id}</td>\r\n                <td>{item?.firstName}</td>\r\n                <td>{item?.lastName}</td>\r\n                <td>{shortenString(item?.email, 10)}</td>\r\n                <td>{item?.telephone}</td>\r\n                <td>{shortenString(item?.address, 15)}</td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n\r\n      <div style={{ overflow: 'auto' }}>\r\n        <Modal show={showModal} onHide={handleModalClose}>\r\n          <Modal.Header closeButton>\r\n            <button\r\n              style={{\r\n                backgroundColor: modalData?.paid ? 'green' : 'red',\r\n                color: 'white',\r\n                padding: '2px 3px',\r\n                borderRadius: '5px',\r\n                cursor: 'pointer',\r\n              }}\r\n              disabled={modalData?.status == 'delivered' ? true : false}\r\n            >\r\n              ID - {modalData?.id}\r\n            </button>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <table className=\"table\">\r\n              <thead\r\n                style={{\r\n                  fontSize: '1.3rem',\r\n                  fontWeight: 'bold',\r\n                  lineHeight: '1.5',\r\n                }}\r\n              >\r\n                User&nbsp;Details\r\n              </thead>{' '}\r\n              <br />\r\n              <tbody>\r\n                <tr>\r\n                  <th>USER ID</th>\r\n                  <td>{modalData?.id}</td>\r\n                </tr>\r\n                <tr>\r\n                  <th>FIRST NAME</th>\r\n                  <td>{modalData?.firstName}</td>\r\n                </tr>\r\n                <tr>\r\n                  <th>LAST NAME</th>\r\n                  <td>{modalData?.lastName}</td>\r\n                </tr>\r\n                <tr>\r\n                  <th>EMAIL</th>\r\n                  <td>{modalData?.email}</td>\r\n                </tr>\r\n                <tr>\r\n                  <th>TELEPHONE</th>\r\n                  <td>{modalData?.telephone}</td>\r\n                </tr>\r\n                <tr>\r\n                  <th>ADDRESS</th>\r\n                  <td>{modalData?.address}</td>\r\n                </tr>\r\n              </tbody>\r\n              <hr />\r\n              <tfoot>\r\n                <th>Date Joined</th>\r\n                <td>{new Date(modalData?.created_at).toLocaleString()}</td>\r\n              </tfoot>\r\n            </table>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button variant=\"secondary\" onClick={handleModalClose}>\r\n              Close\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      </div>\r\n    </UserLayout>\r\n  );\r\n};\r\n\r\nexport default UserLogistics;\r\n","C:\\Users\\mgenius\\Desktop\\PROGRAMMING\\CLIENT JOBS\\Teknesis_Kupon\\kupon_next\\pages\\dashboard\\user\\index.js",["257","258","259","260","261","262","263","264","265","266","267","268","269","270","271"],[],"import React, { useRef } from 'react';\r\nimport Link from 'next/link';\r\n// import './account.css';\r\n\r\n// import useAuth from '../../../hooks/useAuth';\r\nimport PageAuthentication from '../../../hooks/useAuth';\r\n\r\nfunction Account() {\r\n  const asideRef = useRef();\r\n  // const user = useAuth();\r\n\r\n  return (\r\n    <PageAuthentication>\r\n      <main id=\"account\">\r\n        <aside ref={asideRef}>\r\n          <div className=\"profile\">\r\n            <img\r\n              src=\"https://img.icons8.com/material-outlined/24/FD7E14/user-female-circle.png\"\r\n              alt=\"kupon\"\r\n            />\r\n\r\n            <span className=\"profile_ne\">\r\n              <b style={{ fontSize: '8px' }}>\r\n                {/* {userDetails ? userDetails.userFirstname : null} */}\r\n              </b>\r\n              <br />\r\n              <b style={{ fontSize: '8px' }}>\r\n                {/* {userDetails ? userDetails.useremail : null} */}\r\n              </b>\r\n            </span>\r\n            {/* <img src=\"https://img.icons8.com/ios/50/FD7E14/cancel.png\" /> */}\r\n            <img\r\n              id=\"cancel\"\r\n              src=\"https://img.icons8.com/ios/50/FD7E14/cancel.png\"\r\n              onClick={() => asideRef.current.classList.remove('menu')}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"side_links\">\r\n            <span>\r\n              <img\r\n                src=\"https://img.icons8.com/ios-glyphs/30/FD7E14/home-page--v1.png\"\r\n                className=\"icon\"\r\n              />\r\n              <Link href=\"/\">\r\n                <b>Home</b>\r\n              </Link>\r\n            </span>\r\n            <span>\r\n              <img\r\n                src=\"https://img.icons8.com/material-outlined/24/FD7E14/dashboard-layout.png\"\r\n                className=\"icon\"\r\n              />\r\n              <b>Dashboard</b>\r\n            </span>\r\n            <span>\r\n              <img\r\n                src=\"https://img.icons8.com/ios/50/FD7E14/administrator-male--v1.png\"\r\n                className=\"icon\"\r\n              />\r\n              <b>Profile</b>\r\n            </span>\r\n\r\n            <span>\r\n              <img\r\n                src=\"https://img.icons8.com/ios/50/FD7E14/push-notifications.png\"\r\n                className=\"icon\"\r\n              />\r\n              <b>Notification</b>\r\n            </span>\r\n\r\n            <span style={{ cursor: 'pointer' }}>\r\n              <img\r\n                src=\"https://img.icons8.com/ios/50/FD7E14/logout-rounded--v1.png\"\r\n                className=\"icon\"\r\n              />\r\n              <b>Logout</b>\r\n            </span>\r\n            {/* <span>\r\n              <img src={collapse} className=\"icon\" alt=\"lynue home\" />\r\n              <b>Collapse</b>\r\n            </span> */}\r\n          </div>\r\n        </aside>\r\n\r\n        <section className=\"main_container\">\r\n          <header>\r\n            <div>\r\n              <img\r\n                id=\"menu\"\r\n                src=\"https://img.icons8.com/ios-filled/50/000000/menu--v1.png\"\r\n                onClick={() => asideRef.current.classList.add('menu')}\r\n              />\r\n              {/* <div className=\"alert alert-primary\" role=\"alert\">\r\n                <h3 className=\"h1 text-center\"> Admin</h3>\r\n              </div> */}\r\n              <h3>Settings</h3>\r\n              <p style={{ opacity: '0.7' }}>\r\n                Manage your personal and organization settings\r\n              </p>\r\n            </div>\r\n            <nav>\r\n              <ul style={{ listStyle: 'none', margin: '10px' }}>\r\n                <li style={{ margin: '10px' }}>\r\n                  <Link href=\"profile\">Profile</Link>\r\n                </li>\r\n                <li style={{ margin: '10px' }}>\r\n                  <Link href=\"password\">Password</Link>\r\n                </li>\r\n              </ul>\r\n            </nav>\r\n          </header>\r\n\r\n          <article>{/* <Outlet /> */}</article>\r\n        </section>\r\n      </main>\r\n    </PageAuthentication>\r\n  );\r\n}\r\nexport default Account;\r\n","C:\\Users\\mgenius\\Desktop\\PROGRAMMING\\CLIENT JOBS\\Teknesis_Kupon\\kupon_next\\pages\\dashboard\\user\\logistics.js",["272"],[],"import React, { useState, useEffect } from 'react';\r\nimport { shortenString } from '../../../utils/stringManipulation';\r\nimport UserLayout from '../../../components/user/Layout';\r\nconst UserLogistics = () => {\r\n  const [token] = useState(() => {\r\n    if (typeof window !== 'undefined') {\r\n      return localStorage.getItem('token');\r\n    }\r\n  });\r\n  const [data, setData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchLogistics = async () => {\r\n      try {\r\n        console.log(data);\r\n        const response = await fetch('/logistic/user', {\r\n          method: 'GET',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        });\r\n\r\n        if (!response.ok) {\r\n          const res = await response.json();\r\n          throw new Error(res.msg);\r\n        }\r\n        const res = await response.json();\r\n        console.log(res);\r\n        setData(res.msg);\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    };\r\n    fetchLogistics();\r\n  }, []);\r\n\r\n  const pay = async (id) => {\r\n    try {\r\n      const response = await fetch(`/logistic/pay/${id}`, {\r\n        method: 'GET',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      });\r\n\r\n      if (!response.ok) {\r\n        const res = await response.json();\r\n        throw new Error(res.msg);\r\n      }\r\n      const res = await response.json();\r\n      if (window !== undefined) window.location.replace(`${res.msg}`);\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <UserLayout>\r\n      <div className=\"table-responsive\">\r\n        <table className=\"table table-striped\">\r\n          <thead>\r\n            <tr>\r\n              <th scope=\"col\">Shipment ID</th>\r\n              <th scope=\"col\">Address(Sender)</th>\r\n              <th scope=\"col\">Address(receiver)</th>\r\n              <th scope=\"col\">Status</th>\r\n              <th scope=\"col\">Paid</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {data?.map((item) => (\r\n              <tr key={item?.id}>\r\n                <td>{item?.id}</td>\r\n                <td>{shortenString(item?.pickupAddress, 20)}</td>\r\n                <td>{shortenString(item?.deliveryAddress, 20)}</td>\r\n                <td\r\n                  style={{\r\n                    color:\r\n                      item?.status == 'pending'\r\n                        ? 'red'\r\n                        : item?.status == 'in transit'\r\n                        ? '#f1c40f'\r\n                        : 'green',\r\n                  }}\r\n                >\r\n                  {item?.status}\r\n                </td>\r\n                <td>\r\n                  {item.paid ? (\r\n                    'paid'\r\n                  ) : (\r\n                    <small\r\n                      style={{\r\n                        background: 'red',\r\n                        color: 'white',\r\n                        padding: '2px',\r\n                        borderRadius: '5px',\r\n                        cursor: 'pointer',\r\n                      }}\r\n                      onClick={() => pay(item?.id)}\r\n                    >\r\n                      <b className=\"text-white\">pay&nbsp;now</b>\r\n                    </small>\r\n                  )}\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </UserLayout>\r\n  );\r\n};\r\n\r\nexport default UserLogistics;\r\n","C:\\Users\\mgenius\\Desktop\\PROGRAMMING\\CLIENT JOBS\\Teknesis_Kupon\\kupon_next\\pages\\dashboard\\user\\market.js",["273","274"],[],"import React, { useEffect, useState, Fragment } from 'react';\r\nimport { Container, Row, Col, Card, Button, Carousel } from 'react-bootstrap';\r\nimport UserLayout from '../../../components/user/Layout';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport ConfirmationInput from '../../../components/Confirmation';\r\nimport { Modal } from 'react-bootstrap';\r\nimport { useRouter } from 'next/router';\r\n\r\nconst UserMarket = () => {\r\n  const [token] = useState(() => {\r\n    if (typeof window !== 'undefined') {\r\n      return localStorage.getItem('token');\r\n    }\r\n  });\r\n  const router = useRouter();\r\n\r\n  const [data, setData] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [confirmation, setConfirmation] = useState(false);\r\n  const [packageId, setPackageId] = useState();\r\n\r\n  useEffect(() => {\r\n    const fetchSell = async () => {\r\n      try {\r\n        const response = await fetch('/sell/user/package', {\r\n          method: 'GET',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        });\r\n\r\n        if (!response.ok) {\r\n          const res = await response.json();\r\n          throw new Error(res.msg);\r\n        }\r\n        const res = await response.json();\r\n        setData(res.msg);\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    };\r\n    fetchSell();\r\n  }, []);\r\n\r\n  const pay = async (id) => {\r\n    try {\r\n      const response = await fetch(`/sell/pay/${id}`, {\r\n        method: 'GET',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      });\r\n\r\n      if (!response.ok) {\r\n        const res = await response.json();\r\n        throw new Error(res.msg);\r\n      }\r\n      const res = await response.json();\r\n      if (window !== undefined) window.location.replace(`${res.msg}`);\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  const deletePackage = async (id) => {\r\n    setIsLoading(true);\r\n    try {\r\n      const response = await fetch(`/sell/delete/${id}`, {\r\n        method: 'DELETE',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      });\r\n\r\n      if (!response.ok) {\r\n        const res = await response.json();\r\n        throw new Error(res.msg);\r\n      }\r\n      const res = await response.json();\r\n      setIsLoading(false);\r\n      toast.success(res.msg);\r\n      router.reload();\r\n    } catch (err) {\r\n      setIsLoading(false);\r\n      toast.error(err);\r\n    }\r\n  };\r\n  return (\r\n    <UserLayout>\r\n      <Container>\r\n        <Fragment>\r\n          <Row>\r\n            {data?.map((product) => (\r\n              <Col sm={12} md={12} lg={6} key={product.id}>\r\n                <Card className=\"product-card\">\r\n                  <Carousel>\r\n                    {typeof product?.files == 'string'\r\n                      ? JSON.parse(product?.files).map((image, index) => (\r\n                          <Carousel.Item key={index}>\r\n                            <img\r\n                              className=\"d-block w-100\"\r\n                              src={`data:image/png;base64,${image}`}\r\n                              alt={`Product ${product.title}`}\r\n                              style={{ height: 'auto' }}\r\n                            />\r\n                          </Carousel.Item>\r\n                        ))\r\n                      : null}\r\n                  </Carousel>\r\n                  <Card.Body>\r\n                    <Card.Title>{product?.title}</Card.Title>\r\n                    <Card.Text>\r\n                      &#x20A6;\r\n                      {product?.price}\r\n                    </Card.Text>\r\n                    <Card.Text>{product?.description}</Card.Text>\r\n                  </Card.Body>\r\n                  <Card.Footer>\r\n                    <Card.Text>\r\n                      Created on:{' '}\r\n                      {new Date(product?.created_at).toLocaleDateString()}\r\n                    </Card.Text>\r\n                    <div className=\"d-flex justify-content-between\">\r\n                      {product.paid ? (\r\n                        <Button disabled variant=\"primary\">\r\n                          PAID\r\n                        </Button>\r\n                      ) : (\r\n                        <Button variant=\"info\" onClick={() => pay(product?.id)}>\r\n                          PAY NOW\r\n                        </Button>\r\n                      )}\r\n                      {isLoading ? (\r\n                        <Button variant=\"error\" disabled>\r\n                          ...\r\n                        </Button>\r\n                      ) : (\r\n                        <Button\r\n                          variant=\"error\"\r\n                          onClick={() => {\r\n                            setPackageId(product?.id);\r\n                            setConfirmation(true);\r\n                          }}\r\n                        >\r\n                          DELETE\r\n                        </Button>\r\n                      )}\r\n                    </div>\r\n                  </Card.Footer>\r\n                </Card>\r\n              </Col>\r\n            ))}\r\n          </Row>\r\n        </Fragment>\r\n        {confirmation ? (\r\n          <Modal show={true}>\r\n            <ConfirmationInput\r\n              setConfirmation={setConfirmation}\r\n              action={deletePackage}\r\n              title=\"to delete sell packages\"\r\n              packageId={packageId}\r\n            />\r\n          </Modal>\r\n        ) : null}\r\n      </Container>\r\n    </UserLayout>\r\n  );\r\n};\r\n\r\nexport default UserMarket;\r\n","C:\\Users\\mgenius\\Desktop\\PROGRAMMING\\CLIENT JOBS\\Teknesis_Kupon\\kupon_next\\pages\\dashboard\\user\\profile.js",[],[],"C:\\Users\\mgenius\\Desktop\\PROGRAMMING\\CLIENT JOBS\\Teknesis_Kupon\\kupon_next\\pages\\index.js",["275","276","277","278","279","280","281","282","283"],[],"C:\\Users\\mgenius\\Desktop\\PROGRAMMING\\CLIENT JOBS\\Teknesis_Kupon\\kupon_next\\pages\\login.js",["284","285"],[],"import React, { useState } from 'react';\r\nimport Link from 'next/link';\r\nimport { useForm } from 'react-hook-form';\r\n// import { useMutation } from 'react-query';\r\nimport { useRouter } from 'next/router';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport Layout from '../components/Layout';\r\n\r\nexport default function Login() {\r\n  const [data, setData] = useState({});\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const router = useRouter();\r\n  const { handleSubmit } = useForm();\r\n\r\n  const handleInputChange = (e) => {\r\n    setData({ ...data, [e.target.name]: e.target.value });\r\n  };\r\n  const submitLoginDetails = async () => {\r\n    // logInUserMutation.mutate(data);\r\n    setIsLoading(true);\r\n    try {\r\n      const response = await fetch('/user/login', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(data),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        const res = await response.json();\r\n        setIsLoading(false);\r\n        throw new Error(res.msg);\r\n      }\r\n      const res = await response.json();\r\n      localStorage.setItem('token', res);\r\n      setIsLoading(false);\r\n      router.back();\r\n    } catch (err) {\r\n      setIsLoading(false);\r\n      toast.error(err.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Layout title=\"Login\">\r\n      <div id=\"page-content\">\r\n        <img\r\n          src=\"/images/kupon logo with text (1).png\"\r\n          width={100}\r\n          className=\"mx-4 my-2\"\r\n        />\r\n        <div className=\"page section-header text-center\">\r\n          <div className=\"page-title\">\r\n            <div className=\"wrapper\">\r\n              <h1 className=\"mx-2\">Login</h1>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-12 col-sm-12 col-md-6 col-lg-6 main-col offset-md-3\">\r\n              <div className=\"mb-4\">\r\n                <form\r\n                  method=\"post\"\r\n                  action=\"#\"\r\n                  id=\"CustomerLoginForm\"\r\n                  acceptCharset=\"UTF-8\"\r\n                  className=\"contact-form\"\r\n                  onSubmit={handleSubmit(submitLoginDetails)}\r\n                >\r\n                  <div className=\"row\">\r\n                    <div className=\"col-12 col-sm-12 col-md-12 col-lg-12\">\r\n                      <div className=\"form-group\">\r\n                        <label htmlFor=\"CustomerEmail\">Email</label>\r\n                        <input\r\n                          type=\"email\"\r\n                          name=\"email\"\r\n                          id=\"CustomerEmail\"\r\n                          autoCorrect=\"off\"\r\n                          autoCapitalize=\"off\"\r\n                          required\r\n                          onChange={handleInputChange}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-12 col-md-12 col-lg-12\">\r\n                      <div className=\"form-group\">\r\n                        <label htmlFor=\"CustomerPassword\">Password</label>\r\n                        <input\r\n                          type=\"password\"\r\n                          name=\"password\"\r\n                          placeholder=\"\"\r\n                          id=\"CustomerPassword\"\r\n                          required\r\n                          onChange={handleInputChange}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"row\">\r\n                    <div className=\"text-center col-12 col-sm-12 col-md-12 col-lg-12\">\r\n                      {isLoading ? (\r\n                        <input value=\"loading...\" className=\"btn mb-3\"></input>\r\n                      ) : (\r\n                        <input\r\n                          type=\"submit\"\r\n                          className=\"btn mb-3\"\r\n                          value=\"Sign In\"\r\n                        />\r\n                      )}\r\n                      <p\r\n                        className=\"mb-4\"\r\n                        style={{ color: 'black', cursor: 'pointer' }}\r\n                      >\r\n                        {/* <a href=\"#\" id=\"RecoverPassword\">\r\n                          Forgot your password?\r\n                        </a>{' '}\r\n                        &nbsp; | &nbsp; */}\r\n                        New User ?{' '}\r\n                        <Link href=\"/register\" id=\"customer_register_link\">\r\n                          <b style={{ color: '#6e0000' }}>Create Account </b>\r\n                        </Link>\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Layout>\r\n  );\r\n}\r\n","C:\\Users\\mgenius\\Desktop\\PROGRAMMING\\CLIENT JOBS\\Teknesis_Kupon\\kupon_next\\pages\\logistics\\index.js",["286","287","288"],[],"C:\\Users\\mgenius\\Desktop\\PROGRAMMING\\CLIENT JOBS\\Teknesis_Kupon\\kupon_next\\pages\\logistics\\send.js",["289"],[],"import React, { useState, useEffect } from 'react';\r\nimport Layout from '../../components/Layout';\r\nimport { useForm } from 'react-hook-form';\r\n// import { useMutation } from 'react-query';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport ImageUpload from '../../utils/fileupload';\r\nimport { statesInNigeria } from '../../utils/data';\r\nimport PageAuthentication from '../../hooks/useAuth';\r\n\r\nexport default function Logistics() {\r\n  const [data, setData] = useState({});\r\n  const [filesToUpload, setFilesToUpload] = useState([]);\r\n  const [fileUploadError, setFileUploadError] = useState();\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const [token] = useState(() => {\r\n    if (typeof window !== 'undefined') {\r\n      return localStorage.getItem('token');\r\n    }\r\n  });\r\n\r\n  useEffect(() => {\r\n    toast.error(fileUploadError);\r\n    setData({ ...data, ['files']: JSON.stringify(filesToUpload) });\r\n  }, [filesToUpload]);\r\n\r\n  const {\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm();\r\n\r\n  const handleInputChange = (e) => {\r\n    console.log(data);\r\n    setData({ ...data, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const submitPackageDetails = async () => {\r\n    setIsLoading(true);\r\n    try {\r\n      console.log(data);\r\n      const response = await fetch('/logistic/send', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n        body: JSON.stringify(data),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        const res = await response.json();\r\n        setIsLoading(false);\r\n        throw new Error(res.msg);\r\n      }\r\n      const res = await response.json();\r\n      if (window !== undefined) window.location.replace(`${res.msg}`);\r\n      setIsLoading(false);\r\n    } catch (err) {\r\n      setIsLoading(false);\r\n      toast.error(err.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <PageAuthentication>\r\n      <Layout>\r\n        <div id=\"page-content\" style={{ margin: '50px 0px' }}>\r\n          <div className=\"page section-header text-center\">\r\n            <div className=\"page-title\">\r\n              <div className=\"wrapper\">\r\n                <h1 className=\"page-width\">Send Package</h1>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col-xl-6 col-lg-6 col-md-6 col-sm-12 mb-3\">\r\n                <div className=\"customer-box returning-customer\">\r\n                  <div\r\n                    id=\"customer-login\"\r\n                    className=\"collapse customer-content\"\r\n                  >\r\n                    <div className=\"customer-info\">\r\n                      <p className=\"coupon-text\">\r\n                        If you have shopped with us before, please enter your\r\n                        details in the boxes below. If you are a new customer,\r\n                        please proceed to the Billing &amp; Shipping section.\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"row billing-fields container\">\r\n              <div className=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 sm-margin-30px-bottom mx-auto\">\r\n                <div className=\"create-ac-content bg-light-gray padding-20px-all\">\r\n                  <form onSubmit={handleSubmit(submitPackageDetails)}>\r\n                    <fieldset>\r\n                      <h2 className=\"login-title mb-3\">Package Details</h2>\r\n                      <ImageUpload\r\n                        setFileUploadError={setFileUploadError}\r\n                        setFilesToUpload={setFilesToUpload}\r\n                      />\r\n\r\n                      <div className=\"row\">\r\n                        <div className=\"form-group col-md-6 col-lg-6 col-xl-6 required\">\r\n                          <label htmlFor=\"input-firstname\">\r\n                            First Name <span className=\"required-f\">*</span>\r\n                          </label>\r\n                          <input\r\n                            name=\"firstName\"\r\n                            id=\"input-firstname\"\r\n                            type=\"text\"\r\n                            required\r\n                            onChange={handleInputChange}\r\n                          />\r\n                        </div>\r\n                        <div className=\"form-group col-md-6 col-lg-6 col-xl-6 required\">\r\n                          <label htmlFor=\"input-lastname\">\r\n                            Last Name <span className=\"required-f\">*</span>\r\n                          </label>\r\n                          <input\r\n                            name=\"lastName\"\r\n                            id=\"input-lastname\"\r\n                            type=\"text\"\r\n                            required\r\n                            onChange={handleInputChange}\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"row\">\r\n                        <div className=\"form-group col-md-6 col-lg-6 col-xl-6 required\">\r\n                          <label htmlFor=\"input-email\">\r\n                            E-Mail <span className=\"required-f\">*</span>\r\n                          </label>\r\n                          <input\r\n                            name=\"email\"\r\n                            id=\"input-email\"\r\n                            type=\"email\"\r\n                            required\r\n                            onChange={handleInputChange}\r\n                          />\r\n                        </div>\r\n                        <div className=\"form-group col-md-6 col-lg-6 col-xl-6 required\">\r\n                          <label htmlFor=\"input-telephone\">\r\n                            Telephone (sender)\r\n                            <span className=\"required-f\">*</span>\r\n                          </label>\r\n                          <input\r\n                            name=\"telephone\"\r\n                            id=\"input-telephone\"\r\n                            type=\"tel\"\r\n                            required\r\n                            onChange={handleInputChange}\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                    </fieldset>\r\n                    <fieldset>\r\n                      <div className=\"row\">\r\n                        <div className=\"form-group col-md-6 col-lg-6 col-xl-6\">\r\n                          <label htmlFor=\"input-company\">Company</label>\r\n                          <input\r\n                            name=\"company\"\r\n                            id=\"input-company\"\r\n                            type=\"text\"\r\n                            onChange={handleInputChange}\r\n                          />\r\n                        </div>\r\n                        <div className=\"form-group col-md-6 col-lg-6 col-xl-6 required\">\r\n                          <label htmlFor=\"input-address-1\">\r\n                            Pickup Address <span className=\"required-f\">*</span>\r\n                          </label>\r\n                          <input\r\n                            name=\"pickupAddress\"\r\n                            id=\"input-address-1\"\r\n                            type=\"text\"\r\n                            required\r\n                            onChange={handleInputChange}\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"row\">\r\n                        <div className=\"form-group col-md-6 col-lg-6 col-xl-6 required\">\r\n                          <label htmlFor=\"input-city\">\r\n                            Pickup City <span className=\"required-f\">*</span>\r\n                          </label>\r\n                          <input\r\n                            name=\"pickupCity\"\r\n                            id=\"input-city\"\r\n                            type=\"text\"\r\n                            required\r\n                            onChange={handleInputChange}\r\n                          />\r\n                        </div>\r\n                        <div className=\"form-group col-md-6 col-lg-6 col-xl-6 required\">\r\n                          <label htmlFor=\"input-zone\">\r\n                            Pickup Region / State{' '}\r\n                            <span className=\"required-f\">*</span>\r\n                          </label>\r\n                          <select\r\n                            name=\"pickupState\"\r\n                            id=\"input-zone\"\r\n                            required\r\n                            onChange={handleInputChange}\r\n                          >\r\n                            <option disabled> --- Please Select --- </option>\r\n                            {statesInNigeria?.map((state, i) => (\r\n                              <option value={state} key={i}>\r\n                                {state}\r\n                              </option>\r\n                            ))}\r\n                          </select>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"row\">\r\n                        <div className=\"form-group col-md-6 col-lg-6 col-xl-6 required\">\r\n                          <label htmlFor=\"input-telephone\">\r\n                            Telephone (Receiver)\r\n                            <span className=\"required-f\">*</span>\r\n                          </label>\r\n                          <input\r\n                            name=\"receiverTelephone\"\r\n                            id=\"input-telephone\"\r\n                            type=\"tel\"\r\n                            required\r\n                            onChange={handleInputChange}\r\n                          />\r\n                        </div>\r\n                        <div className=\"form-group col-md-6 col-lg-6 col-xl-6 required\">\r\n                          <label htmlFor=\"input-postcode\">\r\n                            Post Code <span className=\"required-f\">*</span>\r\n                          </label>\r\n                          <input\r\n                            name=\"postCode\"\r\n                            id=\"input-postcode\"\r\n                            type=\"text\"\r\n                            required\r\n                            onChange={handleInputChange}\r\n                          />\r\n                        </div>\r\n                        <div className=\"form-group col-md-6 col-lg-6 col-xl-6 required\">\r\n                          <label htmlFor=\"input-address-1\">\r\n                            Delivery Address{' '}\r\n                            <span className=\"required-f\">*</span>\r\n                          </label>\r\n                          <input\r\n                            name=\"deliveryAddress\"\r\n                            id=\"input-address-1\"\r\n                            type=\"text\"\r\n                            required\r\n                            onChange={handleInputChange}\r\n                          />\r\n                        </div>\r\n                        <div className=\"form-group col-md-6 col-lg-6 col-xl-6 required\">\r\n                          <label htmlFor=\"input-address-1\">\r\n                            Delivery City <span className=\"required-f\">*</span>\r\n                          </label>\r\n                          <input\r\n                            name=\"deliveryCity\"\r\n                            id=\"input-address-1\"\r\n                            type=\"text\"\r\n                            required\r\n                            onChange={handleInputChange}\r\n                          />\r\n                        </div>\r\n                        <div className=\"form-group col-md-6 col-lg-6 col-xl-6 required\">\r\n                          <label htmlFor=\"input-zone\">\r\n                            Delivery Region / State{' '}\r\n                            <span className=\"required-f\">*</span>\r\n                          </label>\r\n                          <select\r\n                            name=\"deliveryState\"\r\n                            id=\"input-zone\"\r\n                            onChange={handleInputChange}\r\n                          >\r\n                            <option disabled selected>\r\n                              {' '}\r\n                              --- Please Select ---{' '}\r\n                            </option>\r\n                            {statesInNigeria?.map((state, i) => (\r\n                              <option value={state} key={i}>\r\n                                {state}\r\n                              </option>\r\n                            ))}\r\n                          </select>\r\n                        </div>\r\n                        <div className=\"form-group col-md-6 col-lg-6 col-xl-6 required\">\r\n                          <label htmlFor=\"input-address-1\">\r\n                            Receiver Code <span className=\"required-f\">*</span>\r\n                          </label>\r\n                          <input\r\n                            name=\"receiverCode\"\r\n                            type=\"number\"\r\n                            required\r\n                            onChange={handleInputChange}\r\n                          />\r\n                          {errors.receiverCode && (\r\n                            <div className=\"text-danger text-center\">\r\n                              {errors.receiverCode.message}\r\n                            </div>\r\n                          )}\r\n                        </div>\r\n                      </div>\r\n                    </fieldset>\r\n\r\n                    <fieldset>\r\n                      <div className=\"row\">\r\n                        <div className=\"form-group col-md-12 col-lg-12 col-xl-12\">\r\n                          <label htmlFor=\"input-company\">\r\n                            Package Description{' '}\r\n                            <span className=\"required-f\">*</span>\r\n                          </label>\r\n                          <textarea\r\n                            className=\"form-control resize-both\"\r\n                            rows=\"3\"\r\n                            name=\"description\"\r\n                            onChange={handleInputChange}\r\n                          ></textarea>\r\n                        </div>\r\n                      </div>\r\n                    </fieldset>\r\n                    <div className=\"order-button-payment\">\r\n                      {isLoading ? (\r\n                        <button className=\"btn\" disabled>\r\n                          Loading...\r\n                        </button>\r\n                      ) : (\r\n                        <button\r\n                          className=\"btn\"\r\n                          value=\"Place order\"\r\n                          type=\"submit\"\r\n                        >\r\n                          Proceed\r\n                        </button>\r\n                      )}\r\n                    </div>\r\n                  </form>\r\n                </div>\r\n              </div>\r\n\r\n              {/* <div className=\"col-xl-6 col-lg-6 col-md-6 col-sm-12\">\r\n              <div className=\"your-order-payment\">\r\n                <hr />\r\n                <div className=\"your-payment\">\r\n                  <h2 className=\"payment-title mb-3\">payment method</h2>\r\n                  <div className=\"payment-method\">\r\n                    <div className=\"payment-accordion\">\r\n                      <div id=\"accordion\" className=\"payment-section\">\r\n                        <div className=\"card mb-2\">\r\n                          <div className=\"card-header\">\r\n                            <a\r\n                              className=\"card-link\"\r\n                              data-toggle=\"collapse\"\r\n                              href=\"#collapseOne\"\r\n                            >\r\n                              Direct Bank Transfer{' '}\r\n                            </a>\r\n                          </div>\r\n                          <div>\r\n                            <div className=\"card-body\">\r\n                              <p className=\"no-margin font-15\">\r\n                                Make your payment directly into our bank\r\n                                account. Please use your Order ID as the payment\r\n                                reference. Your order won&apos;t be shipped\r\n                                until the funds have cleared in our account.\r\n                              </p>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"card mb-2\">\r\n                          <div className=\"card-header\">\r\n                            <a\r\n                              className=\"collapsed card-link\"\r\n                              data-toggle=\"collapse\"\r\n                              href=\"#collapseTwo\"\r\n                            >\r\n                              Cheque Payment\r\n                            </a>\r\n                          </div>\r\n                          <div>\r\n                            <div className=\"card-body\">\r\n                              <p className=\"no-margin font-15\">\r\n                                Please send your cheque to Store Name, Store\r\n                                Street, Store Town, Store State / County, Store\r\n                                Postcode.\r\n                              </p>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"card margin-15px-bottom border-radius-none\">\r\n                          <div className=\"card-header\">\r\n                            <a\r\n                              className=\"collapsed card-link\"\r\n                              data-toggle=\"collapse\"\r\n                              href=\"#collapseThree\"\r\n                            >\r\n                              {' '}\r\n                              PayStack{' '}\r\n                            </a>\r\n                          </div>\r\n                          <div>\r\n                            <div className=\"card-body\">\r\n                              <p className=\"no-margin font-15\">\r\n                                Pay via PayStack; you can pay with your credit\r\n                                card if you don&apos;t have a PayStack account.\r\n                              </p>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"card mb-2\">\r\n                          <div></div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div> */}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Layout>\r\n    </PageAuthentication>\r\n  );\r\n}\r\n","C:\\Users\\mgenius\\Desktop\\PROGRAMMING\\CLIENT JOBS\\Teknesis_Kupon\\kupon_next\\pages\\market\\index.js",["290","291","292","293","294"],[],"import Layout from '../../components/Layout';\r\nimport Link from 'next/link';\r\nimport $ from 'jquery';\r\nimport React, { Fragment, useEffect, useState } from 'react';\r\n// import 'slick-carousel/slick/slick';\r\nimport 'slick-carousel/slick/slick.css';\r\nimport 'slick-carousel/slick/slick-theme.css';\r\nimport Slider from 'react-slick';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { fetchData } from '../../store/store';\r\nimport Spinner from 'react-bootstrap/Spinner';\r\n\r\nexport default function Home() {\r\n  const [shuffleData, setShuffleData] = useState();\r\n  // const [token, setToken] = useState(() => {\r\n  //   if (typeof window !== 'undefined') {\r\n  //     return localStorage.getItem('token');\r\n  //   }\r\n  // });\r\n  const dispatch = useDispatch();\r\n  let { data, isLoading } = useSelector((state) => state);\r\n\r\n  useEffect(() => {\r\n    if (typeof window !== 'undefined') {\r\n      window?.addEventListener('scroll', handleScroll); // add scroll event listener on component mount\r\n    }\r\n    return () => {\r\n      if (typeof window !== 'undefined') {\r\n        window?.removeEventListener('scroll', handleScroll); // remove scroll event listener on component unmount\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchData());\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      // Shuffle the array using the Fisher-Yates algorithm\r\n      for (let i = data.length - 1; i > 0; i--) {\r\n        const j = Math.floor(Math.random() * (i + 1));\r\n        [data[i], data[j]] = [data[j], data[i]];\r\n      }\r\n\r\n      // Get the first six items using slice method\r\n      data = data.slice(0, 6);\r\n      setShuffleData(data);\r\n    }\r\n  }, [data]);\r\n\r\n  console.log(shuffleData);\r\n  function handleScroll() {\r\n    if (typeof window !== 'undefined') {\r\n      if (window?.innerWidth > 1199) {\r\n        const headerWrap = $('.header-wrap');\r\n        if (window?.pageYOffset > 145) {\r\n          headerWrap.addClass('stickyNav animated fadeInDown');\r\n        } else {\r\n          headerWrap.removeClass('stickyNav fadeInDown');\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <Layout title=\"Home Page - Market\">\r\n        {/* {/*<!--Body Content-->*/}\r\n        <div id=\"page-content\">\r\n          {/* {/*<!--Home slider-->*/}\r\n          <div className=\"slideshow slideshow-wrapper pb-section sliderFull\">\r\n            <Slider className=\"home-slideshow\">\r\n              <div className=\"slide\">\r\n                <div className=\"blur-up lazyload bg-size\">\r\n                  <img\r\n                    className=\"blur-up lazyload bg-img\"\r\n                    dataSrc=\"/images/slideshow-banners/cart.jpg\"\r\n                    src=\"/images/slideshow-banners/cart.jpg\"\r\n                    alt=\"Summer Bikini Collection\"\r\n                    title=\"Summer Bikini Collection\"\r\n                    style={{\r\n                      width: '100%',\r\n                      height: '60vh!important',\r\n                      objectFit: 'cover',\r\n                    }}\r\n                  />\r\n                  <div className=\"slideshow__text-wrap slideshow__overlay classic bottom\">\r\n                    <div className=\"slideshow__text-content bottom\">\r\n                      <div className=\"wrap-caption center\">\r\n                        <h2 className=\"h1 mega-title slideshow__title\">\r\n                          <b style={{ color: '#e60000' }}>Kupon</b> Online\r\n                          <b> Marketplace</b>\r\n                        </h2>\r\n                        <span className=\"mega-subtitle slideshow__subtitle\">\r\n                          If you&apos;re looking for a platform to sell your\r\n                          products online, consider listing them on Kupon\r\n                          Marketplace\r\n                        </span>\r\n                        <Link href=\"/market/sell\">\r\n                          <span className=\"btn\">Sell Now</span>\r\n                        </Link>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"slide\">\r\n                <div className=\"blur-up lazyload bg-size\">\r\n                  <img\r\n                    className=\"blur-up lazyload bg-img\"\r\n                    dataSrc=\"/images/slideshow-banners/cart.jpg\"\r\n                    src=\"/images/slideshow-banners/carts.jpg\"\r\n                    alt=\"Summer Bikini Collection\"\r\n                    title=\"Summer Bikini Collection\"\r\n                    style={{\r\n                      width: '100%',\r\n                      height: '60vh!important',\r\n                      objectFit: 'cover',\r\n                    }}\r\n                  />\r\n                  <div className=\"slideshow__text-wrap slideshow__overlay classic bottom\">\r\n                    <div className=\"slideshow__text-content bottom\">\r\n                      <div className=\"wrap-caption center\">\r\n                        <h2 className=\"h1 mega-title slideshow__title\">\r\n                          <b style={{ color: '#e60000' }}>Kupon</b> Online\r\n                          <b> Marketplace</b>\r\n                        </h2>\r\n                        <span className=\"mega-subtitle slideshow__subtitle\">\r\n                          If you&apos;re looking for a platform to buy products\r\n                          online, kupon is your best option\r\n                        </span>\r\n                        <Link href=\"/market/shop\">\r\n                          <span className=\"btn\">Buy Now</span>\r\n                        </Link>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </Slider>\r\n          </div>\r\n\r\n          {/*<!--Featured Product-->*/}\r\n          <div className=\"product-rows section\">\r\n            <div className=\"container\">\r\n              <div className=\"row\">\r\n                <div\r\n                  className=\"col-12 col-sm-12 col-md-12 col-lg-12\"\r\n                  id=\"marketcollection\"\r\n                >\r\n                  <div className=\"section-header text-center\">\r\n                    <h2 className=\"h2\">Featured collection</h2>\r\n                    <p>Our most popular products based on sales</p>\r\n                  </div>\r\n                </div>\r\n                <div className=\"grid-products container\">\r\n                  <div className=\"row\">\r\n                    {isLoading ? (\r\n                      <div className=\"section text-center col-12\">\r\n                        <Spinner\r\n                          animation=\"grow\"\r\n                          role=\"status\"\r\n                          variant=\"danger\"\r\n                        >\r\n                          <span className=\"text-center\">Loading...</span>\r\n                        </Spinner>\r\n                      </div>\r\n                    ) : shuffleData?.length ? (\r\n                      shuffleData?.map((product, i) => (\r\n                        <Link href={`/market/shop/${product?.id}`} key={i}>\r\n                          <div\r\n                            className=\"col-12 col-sm-12 col-md-4 col-lg-4 item grid-view-item style2\"\r\n                            key={i}\r\n                          >\r\n                            <div className=\"grid-view_image\">\r\n                              {/*<!-- start product image -->*/}\r\n                              <div className=\"grid-view-item__link\">\r\n                                {/*<!-- image -->*/}\r\n                                <img\r\n                                  className=\"grid-view-item__image primary blur-up lazyload\"\r\n                                  dataSrc={`data:image/png;base64,${\r\n                                    JSON.parse(product?.files)[0]\r\n                                  }`}\r\n                                  src={`data:image/png;base64,${\r\n                                    JSON.parse(product?.files)[0]\r\n                                  }`}\r\n                                  alt=\"image\"\r\n                                  title=\"product\"\r\n                                  style={{ height: '250px' }}\r\n                                />\r\n                                {/*<!-- End image -->*/}\r\n                                {/*<!-- Hover image -->*/}\r\n                                <img\r\n                                  className=\"grid-view-item__image hover blur-up lazyload\"\r\n                                  dataSrc={`data:image/png;base64,${\r\n                                    JSON.parse(product.files)[1]\r\n                                      ? JSON.parse(product.files)[1]\r\n                                      : JSON.parse(product.files)[0]\r\n                                  }`}\r\n                                  src={`data:image/png;base64,${\r\n                                    JSON.parse(product.files)[1]\r\n                                      ? JSON.parse(product.files)[1]\r\n                                      : JSON.parse(product.files)[0]\r\n                                  }`}\r\n                                  alt=\"image\"\r\n                                  title=\"product\"\r\n                                  style={{ height: '250px' }}\r\n                                />\r\n\r\n                                <div className=\"product-labels rectangular\">\r\n                                  <span className=\"lbl on-sale\">\r\n                                    {product?.category}\r\n                                  </span>{' '}\r\n                                  <span className=\"lbl pr-label1\">\r\n                                    {product?.conditions}\r\n                                  </span>\r\n                                </div>\r\n                                {/*<!-- End product label -->*/}\r\n                              </div>\r\n                              {/*<!-- end product image -->*/}\r\n                              {/*<!--start product details -->*/}\r\n                              <div className=\"product-details text-center mobile\">\r\n                                {/*<!-- product name -->*/}\r\n                                <div className=\"product-name\">\r\n                                  <a>{product?.title}</a>\r\n                                </div>\r\n                                {/*<!-- End product name -->*/}\r\n                                {/*<!-- product price -->*/}\r\n                                <div className=\"\">\r\n                                  <span className=\"\">\r\n                                    &#8358;{product?.price}\r\n                                  </span>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </Link>\r\n                      ))\r\n                    ) : (\r\n                      <div className=\"section text-center col-12 d-flex justify-content-center\">\r\n                        <span className=\"text-center mx-5 text-lg\">\r\n                          <b>NO COLLECTION</b>\r\n                        </span>\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                  {shuffleData?.length ? (\r\n                    <div className=\"text-right\">\r\n                      <Link href=\"market/shop\">\r\n                        <button className=\"btn\">MORE</button>\r\n                      </Link>\r\n                    </div>\r\n                  ) : null}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          {/*<!--End Featured Product-->*/}\r\n        </div>\r\n        {/* {/*<!--End Body Content-->*/}\r\n      </Layout>\r\n    </Fragment>\r\n  );\r\n}\r\n","C:\\Users\\mgenius\\Desktop\\PROGRAMMING\\CLIENT JOBS\\Teknesis_Kupon\\kupon_next\\pages\\market\\sell.js",["295"],[],"import React, { useState, useEffect } from 'react';\r\nimport Layout from '../../components/Layout';\r\nimport { useForm } from 'react-hook-form';\r\n// import { useMutation } from 'react-query';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport ImageUpload from '../../utils/fileupload';\r\nimport PageAuthentication from '../../hooks/useAuth';\r\n\r\nimport {\r\n  statesInNigeria,\r\n  Condition,\r\n  sellCategory,\r\n  sellMaterials,\r\n} from '../../utils/data';\r\n\r\nexport default function Logistics() {\r\n  const [data, setData] = useState({});\r\n  const [filesToUpload, setFilesToUpload] = useState([]);\r\n  const [fileUploadError, setFileUploadError] = useState();\r\n  const [isLoading, setIsLoading] = useState();\r\n\r\n  const [token] = useState(() => {\r\n    if (typeof window !== 'undefined') {\r\n      return localStorage.getItem('token');\r\n    }\r\n  });\r\n\r\n  useEffect(() => {\r\n    toast.error(fileUploadError);\r\n    setData({ ...data, ['files']: JSON.stringify(filesToUpload) });\r\n  }, [filesToUpload]);\r\n\r\n  const { handleSubmit } = useForm();\r\n\r\n  const handleInputChange = (e) => {\r\n    setData({ ...data, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const submitPackageDetails = async () => {\r\n    // sellPackageMutation.mutate(data);\r\n    setIsLoading(true);\r\n    try {\r\n      const response = await fetch('/sell', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n        body: JSON.stringify(data),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        const res = await response.json();\r\n        setIsLoading(false);\r\n        throw new Error(res.msg);\r\n      }\r\n      const res = await response.json();\r\n      localStorage.setItem('token', res);\r\n      if (window !== undefined) window.location.replace(`${res.msg}`);\r\n      setIsLoading(false);\r\n    } catch (err) {\r\n      setIsLoading(false);\r\n      toast.error(err.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <PageAuthentication>\r\n      <Layout title=\"Sell - Market\">\r\n        <div id=\"page-content\" style={{ margin: '50px 0px' }}>\r\n          <div className=\"page section-header text-center\">\r\n            <div className=\"page-title\">\r\n              <div className=\"wrapper\">\r\n                <h1 className=\"page-width\">Upload Sell Product</h1>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col-xl-6 col-lg-6 col-md-6 col-sm-12 mb-3\">\r\n                <div className=\"customer-box returning-customer\">\r\n                  <div\r\n                    id=\"customer-login\"\r\n                    className=\"collapse customer-content\"\r\n                  ></div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"row billing-fields\">\r\n              <div className=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 sm-margin-30px-bottom\">\r\n                <div className=\"create-ac-content bg-light-gray padding-20px-all\">\r\n                  <form onSubmit={handleSubmit(submitPackageDetails)}>\r\n                    <fieldset>\r\n                      <h2 className=\"login-title mb-3\">Sell Details</h2>\r\n                      <ImageUpload\r\n                        setFileUploadError={setFileUploadError}\r\n                        setFilesToUpload={setFilesToUpload}\r\n                      />\r\n                    </fieldset>\r\n                    <fieldset>\r\n                      <div className=\"row\">\r\n                        <div className=\"form-group col-md-6 col-lg-6 col-xl-6 required\">\r\n                          <label htmlFor=\"input-firstname\">\r\n                            Product Title <span className=\"required-f\">*</span>\r\n                          </label>\r\n                          <input\r\n                            name=\"title\"\r\n                            id=\"input-firstname\"\r\n                            type=\"text\"\r\n                            required\r\n                            onChange={handleInputChange}\r\n                          />\r\n                        </div>\r\n\r\n                        <div className=\"form-group col-md-6 col-lg-6 col-xl-6 required\">\r\n                          <label htmlFor=\"input-address-1\">\r\n                            Location <span className=\"required-f\">*</span>\r\n                          </label>\r\n                          <input\r\n                            name=\"location\"\r\n                            id=\"input-address-1\"\r\n                            type=\"text\"\r\n                            required\r\n                            onChange={handleInputChange}\r\n                          />\r\n                        </div>\r\n                        <div className=\"form-group col-md-6 col-lg-6 col-xl-6 required\">\r\n                          <label htmlFor=\"input-city\">\r\n                            City <span className=\"required-f\">*</span>\r\n                          </label>\r\n                          <input\r\n                            name=\"city\"\r\n                            id=\"input-city\"\r\n                            type=\"text\"\r\n                            required\r\n                            onChange={handleInputChange}\r\n                          />\r\n                        </div>\r\n                        <div className=\"form-group col-md-6 col-lg-6 col-xl-6 required\">\r\n                          <label htmlFor=\"state\">\r\n                            State <span className=\"required-f\">*</span>\r\n                          </label>\r\n                          <select\r\n                            name=\"state\"\r\n                            id=\"state\"\r\n                            required\r\n                            onChange={handleInputChange}\r\n                          >\r\n                            <option disabled selected>\r\n                              {' '}\r\n                              --- Please Select ---{' '}\r\n                            </option>\r\n                            {statesInNigeria?.map((state, i) => (\r\n                              <option value={state} key={i}>\r\n                                {state}\r\n                              </option>\r\n                            ))}\r\n                          </select>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"row\">\r\n                        <div className=\"form-group col-md-6 col-lg-6 col-xl-6 required\">\r\n                          <label htmlFor=\"category\">\r\n                            Category <span className=\"required-f\">*</span>\r\n                          </label>\r\n                          <select\r\n                            name=\"category\"\r\n                            id=\"category\"\r\n                            required\r\n                            onChange={handleInputChange}\r\n                          >\r\n                            <option disabled selected>\r\n                              {' '}\r\n                              --- Please Select ---{' '}\r\n                            </option>\r\n                            {sellCategory?.map((category, i) => (\r\n                              <option value={category} key={i}>\r\n                                {category}\r\n                              </option>\r\n                            ))}\r\n                          </select>\r\n                        </div>\r\n                        <div className=\"form-group col-md-6 col-lg-6 col-xl-6 required\">\r\n                          <label htmlFor=\"material\">\r\n                            Material <span className=\"required-f\">*</span>\r\n                          </label>\r\n                          <select\r\n                            name=\"material\"\r\n                            id=\"material\"\r\n                            required\r\n                            onChange={handleInputChange}\r\n                          >\r\n                            <option disabled selected>\r\n                              {' '}\r\n                              --- Please Select ---{' '}\r\n                            </option>\r\n                            {sellMaterials?.map((material, i) => (\r\n                              <option value={material} key={i}>\r\n                                {material}\r\n                              </option>\r\n                            ))}\r\n                          </select>\r\n                        </div>\r\n                        <div className=\"form-group col-md-6 col-lg-6 col-xl-6 required\">\r\n                          <label htmlFor=\"condition\">\r\n                            Condition <span className=\"required-f\">*</span>\r\n                          </label>\r\n                          <select\r\n                            name=\"conditions\"\r\n                            id=\"conditions\"\r\n                            required\r\n                            onChange={handleInputChange}\r\n                          >\r\n                            <option disabled selected>\r\n                              {' '}\r\n                              --- Please Select ---{' '}\r\n                            </option>\r\n                            {Condition?.map((condition, i) => (\r\n                              <option value={condition} key={i}>\r\n                                {condition}\r\n                              </option>\r\n                            ))}\r\n                          </select>\r\n                        </div>\r\n                        <div className=\"form-group col-md-6 col-lg-6 col-xl-6 required\">\r\n                          <label htmlFor=\"input-city\">\r\n                            Price (&#8358;){' '}\r\n                            <span className=\"required-f\">*</span>\r\n                          </label>\r\n                          <input\r\n                            name=\"price\"\r\n                            id=\"input-city\"\r\n                            type=\"text\"\r\n                            required\r\n                            onChange={handleInputChange}\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"row\">\r\n                        <div className=\"form-group col-md-12 col-lg-12 col-xl-12\">\r\n                          <label htmlFor=\"input-company\">\r\n                            Package Description{' '}\r\n                            <span className=\"required-f\">*</span>\r\n                          </label>\r\n                          <textarea\r\n                            className=\"form-control resize-both\"\r\n                            rows=\"3\"\r\n                            name=\"description\"\r\n                            onChange={handleInputChange}\r\n                          ></textarea>\r\n                        </div>\r\n                      </div>\r\n                    </fieldset>\r\n                    <div className=\"order-button-payment\">\r\n                      {isLoading ? (\r\n                        <button className=\"btn\" disabled>\r\n                          Loading...\r\n                        </button>\r\n                      ) : (\r\n                        <button\r\n                          className=\"btn\"\r\n                          value=\"Place order\"\r\n                          type=\"submit\"\r\n                        >\r\n                          PROCEED\r\n                        </button>\r\n                      )}\r\n                    </div>\r\n                  </form>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Layout>\r\n    </PageAuthentication>\r\n  );\r\n}\r\n","C:\\Users\\mgenius\\Desktop\\PROGRAMMING\\CLIENT JOBS\\Teknesis_Kupon\\kupon_next\\pages\\market\\shop\\index.js",["296","297","298","299","300","301","302","303","304","305"],[],"import React, { useState, useEffect } from 'react';\r\nimport Layout from '../../../components/Layout';\r\nimport { Spinner } from 'react-bootstrap';\r\nimport Link from 'next/link';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { fetchData } from '../../../store/store';\r\nimport { sellCategory, Condition } from '../../../utils/data';\r\nimport { shortenString } from '../../../utils/stringManipulation';\r\nimport { Carousel } from 'react-bootstrap';\r\nexport default function Shop() {\r\n  const [allData, setAllData] = useState([]);\r\n  const dispatch = useDispatch();\r\n  let { data, isLoading } = useSelector((state) => state);\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchData());\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    setAllData(data);\r\n  }, [data]);\r\n\r\n  function searchData(name, e) {\r\n    if (name == 'name') {\r\n      if (e == '' || e == 'Other') setAllData(data);\r\n      else {\r\n        setAllData(() =>\r\n          data.filter((product) =>\r\n            product.title.toLowerCase().includes(e.toLowerCase())\r\n          )\r\n        );\r\n      }\r\n    } else if (name == 'condition') {\r\n      if (e == '' || e == 'Other') setAllData(data);\r\n      else {\r\n        setAllData(() =>\r\n          data.filter((product) =>\r\n            product.conditions.toLowerCase().includes(e.toLowerCase())\r\n          )\r\n        );\r\n      }\r\n    } else if (name == 'category') {\r\n      if (e == '' || e == 'Other') setAllData(data);\r\n      else {\r\n        setAllData(() =>\r\n          data.filter((product) =>\r\n            product.category.toLowerCase().includes(e.toLowerCase())\r\n          )\r\n        );\r\n      }\r\n    }\r\n  }\r\n  return (\r\n    <Layout title=\"Shop - Market\">\r\n      <div\r\n        className=\"slideshow slideshow-wrapper pb-section sliderFull\"\r\n        style={{ marginBottom: '50px' }}\r\n      >\r\n        <Carousel>\r\n          <Carousel.Item interval={10000}>\r\n            <img\r\n              className=\"blur-up lazyload bg-img land-image-slider\"\r\n              dataSrc=\"/images/slideshow-banners/cartss.jpg\"\r\n              src=\"/images/slideshow-banners/carts.jpg\"\r\n              alt=\"Kupon\"\r\n              title=\"Kupon\"\r\n              style={{\r\n                width: '100%',\r\n                height: '60vh!important',\r\n                objectFit: 'cover',\r\n              }}\r\n            />\r\n            <Carousel.Caption>\r\n              <h2 className=\"h1 mega-title slideshow__title\">\r\n                <b style={{ color: '#e60000' }}>\r\n                  {' '}\r\n                  <img\r\n                    src=\"https://img.icons8.com/external-parzival-1997-flat-parzival-1997/64/null/external-find-technology-in-daily-life-parzival-1997-flat-parzival-1997.png\"\r\n                    width={30}\r\n                  />\r\n                  Find\r\n                </b>{' '}\r\n                In kupon\r\n              </h2>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control search_input\"\r\n                onChange={(e) => searchData('name', e.target.value)}\r\n              />\r\n            </Carousel.Caption>\r\n          </Carousel.Item>\r\n          <Carousel.Item interval={10000}>\r\n            <img\r\n              className=\"blur-up lazyload bg-img land-image-slider\"\r\n              dataSrc=\"/images/slideshow-banners/cart.jpg\"\r\n              src=\"/images/slideshow-banners/cart.jpg\"\r\n              alt=\"Kupon\"\r\n              title=\"Kupon\"\r\n              style={{\r\n                width: '100%',\r\n                height: '60vh!important',\r\n                objectFit: 'cover',\r\n              }}\r\n            />\r\n            <Carousel.Caption>\r\n              <h2 className=\"h1 mega-title slideshow__title\">\r\n                <b style={{ color: '#e60000' }}>\r\n                  {' '}\r\n                  <img\r\n                    src=\"https://img.icons8.com/external-parzival-1997-flat-parzival-1997/64/null/external-find-technology-in-daily-life-parzival-1997-flat-parzival-1997.png\"\r\n                    width={30}\r\n                  />\r\n                  Find\r\n                </b>{' '}\r\n                In kupon\r\n              </h2>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control search_input\"\r\n                onChange={(e) => searchData('name', e.target.value)}\r\n              />\r\n            </Carousel.Caption>\r\n          </Carousel.Item>\r\n        </Carousel>\r\n      </div>\r\n      <Link href=\"/market/sell\">\r\n        <div\r\n          className=\"container\"\r\n          style={{\r\n            padding: '20px',\r\n            fontSize: '50px',\r\n            backgroundColor: '#f54337',\r\n            color: 'white',\r\n            textAlign: 'center',\r\n            cursor: 'pointer',\r\n          }}\r\n        >\r\n          POST SELL{' '}\r\n          <img\r\n            src=\"https://img.icons8.com/ios/50/FFFFFF/shopping-cart--v1.png\"\r\n            className=\"mx-2\"\r\n          />\r\n        </div>\r\n      </Link>\r\n\r\n      <div id=\"page-content\" style={{ marginTop: '80px' }}>\r\n        <div classNameName=\"page section-header text-center\">\r\n          <div className=\"page-title\">\r\n            <div className=\"wrapper\">\r\n              <h1 className=\"page-width text-center\"> Shop List</h1>\r\n            </div>\r\n            <br />\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {data ? (\r\n        <div className=\"grid-products row\">\r\n          <div className=\" col-lg-6 container\">\r\n            <br />\r\n            <div className=\"row \">\r\n              <div className=\"col-6\">\r\n                <label htmlFor=\"state\">\r\n                  Name <span></span>\r\n                </label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control search_input\"\r\n                  onChange={(e) => searchData('name', e.target.value)}\r\n                />\r\n              </div>\r\n              <div className=\"form-group col-6 required\">\r\n                <label htmlFor=\"state\">\r\n                  Condition <span></span>\r\n                </label>\r\n                <select\r\n                  onChange={(e) => searchData('condition', e.target.value)}\r\n                >\r\n                  <option disabled selected>\r\n                    {' '}\r\n                    --- Please Select ---{' '}\r\n                  </option>\r\n                  {Condition?.map((a, i) => (\r\n                    <option value={a} key={i}>\r\n                      {a}\r\n                    </option>\r\n                  ))}\r\n                </select>\r\n              </div>\r\n              <div className=\"form-group col-6 required\">\r\n                <label htmlFor=\"state\">\r\n                  Category <span></span>\r\n                </label>\r\n                <select\r\n                  onChange={(e) => searchData('category', e.target.value)}\r\n                >\r\n                  <option disabled selected>\r\n                    {' '}\r\n                    --- Please Select ---{' '}\r\n                  </option>\r\n                  {sellCategory?.map((a, i) => (\r\n                    <option value={a} key={i}>\r\n                      {a}\r\n                    </option>\r\n                  ))}\r\n                </select>\r\n              </div>\r\n              <div className=\"form-group col-6 required\">\r\n                <label htmlFor=\"state\">\r\n                  Price <span></span>\r\n                </label>\r\n                <select onChange={(e) => searchData('price', e.target.value)}>\r\n                  <option disabled selected>\r\n                    {' '}\r\n                    --- Please Select ---{' '}\r\n                  </option>\r\n                </select>\r\n              </div>\r\n            </div>\r\n\r\n            <br />\r\n          </div>\r\n          <div className=\" col-lg-6 row container\">\r\n            {isLoading ? (\r\n              <div className=\"section text-center col-12\">\r\n                <Spinner animation=\"grow\" role=\"status\" variant=\"danger\">\r\n                  <span className=\"text-center\">Loading...</span>\r\n                </Spinner>\r\n              </div>\r\n            ) : (\r\n              allData?.map((product, i) => (\r\n                <Link href={`/market/shop/${product?.id}`} key={i}>\r\n                  <div className=\"col-12 col-sm-6 col-md-4 col-lg-6 item grid-view-item style2\">\r\n                    <div className=\"grid-view_image\">\r\n                      {/*<!-- start product image -->*/}\r\n                      <div className=\"grid-view-item__link\">\r\n                        {/*<!-- image -->*/}\r\n                        <img\r\n                          className=\"grid-view-item__image primary blur-up lazyload\"\r\n                          dataSrc={`data:image/png;base64,${\r\n                            JSON.parse(product?.files)[0]\r\n                          }`}\r\n                          src={`data:image/png;base64,${\r\n                            JSON.parse(product?.files)[0]\r\n                          }`}\r\n                          alt=\"image\"\r\n                          title=\"product\"\r\n                          style={{ height: '250px' }}\r\n                        />\r\n                        {/*<!-- End image -->*/}\r\n                        {/*<!-- Hover image -->*/}\r\n                        <img\r\n                          className=\"grid-view-item__image hover blur-up lazyload\"\r\n                          dataSrc={`data:image/png;base64,${\r\n                            JSON.parse(product.files)[1]\r\n                              ? JSON.parse(product.files)[1]\r\n                              : JSON.parse(product.files)[0]\r\n                          }`}\r\n                          src={`data:image/png;base64,${\r\n                            JSON.parse(product.files)[1]\r\n                              ? JSON.parse(product.files)[1]\r\n                              : JSON.parse(product.files)[0]\r\n                          }`}\r\n                          alt=\"image\"\r\n                          title=\"product\"\r\n                          style={{ height: '250px' }}\r\n                        />\r\n\r\n                        <div className=\"product-labels rectangular\">\r\n                          <span\r\n                            className=\"lbl on-sale\"\r\n                            title={product?.category}\r\n                          >\r\n                            {shortenString(product?.category, 20)}\r\n                          </span>{' '}\r\n                          <span className=\"lbl pr-label1\">\r\n                            {product?.conditions}\r\n                          </span>\r\n                        </div>\r\n                        {/*<!-- End product label -->*/}\r\n                      </div>\r\n                      {/*<!-- end product image -->*/}\r\n                      {/*<!--start product details -->*/}\r\n                      <div className=\"product-details text-center mobile\">\r\n                        {/*<!-- product name -->*/}\r\n                        <div className=\"product-name\">\r\n                          <span>{product?.title}</span>\r\n                        </div>\r\n                        {/*<!-- End product name -->*/}\r\n                        {/*<!-- product price -->*/}\r\n                        <div className=\"product-price\">\r\n                          {/* <span className=\"old-price\">$500.00</span> */}\r\n                          <span className=\"price\">&#8358;{product?.price}</span>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </Link>\r\n              ))\r\n            )}\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <p className=\"page-width text-center\"> No uploaded item yet</p>\r\n      )}\r\n    </Layout>\r\n  );\r\n}\r\n","C:\\Users\\mgenius\\Desktop\\PROGRAMMING\\CLIENT JOBS\\Teknesis_Kupon\\kupon_next\\pages\\market\\shop\\[product].js",["306","307","308","309","310","311","312"],[],"import React, { useState, useEffect } from 'react';\r\nimport Layout from '../../../components/Layout';\r\nimport { useRouter } from 'next/router';\r\nimport { Carousel, Alert, Card } from 'react-bootstrap';\r\nimport PageAuthentication from '../../../hooks/useAuth';\r\nimport Link from 'next/link';\r\nexport default function Cart() {\r\n  const router = useRouter();\r\n  const { query } = router;\r\n  const { product } = query;\r\n  const [data, setData] = useState({});\r\n  const [user, setUser] = useState();\r\n  const [error, setError] = useState();\r\n  const [token] = useState(() => {\r\n    if (typeof window !== 'undefined') {\r\n      return localStorage.getItem('token');\r\n    }\r\n  });\r\n\r\n  useEffect(() => {\r\n    fetch(`/sell/${product}`, {\r\n      method: 'GET',\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    })\r\n      .then((response) => {\r\n        if (!response.ok) {\r\n          throw new Error('Network response was not ok');\r\n        }\r\n        return response.json();\r\n      })\r\n      .then((data) => {\r\n        setData(data?.msg);\r\n      })\r\n      .catch(() => {\r\n        setError(error);\r\n      });\r\n  }, [product]);\r\n\r\n  useEffect(() => {\r\n    fetch(`/user/${data?.sellerId}`, {\r\n      method: 'GET',\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    })\r\n      .then((response) => {\r\n        if (!response.ok) {\r\n          throw new Error('Network response was not ok');\r\n        }\r\n        return response.json();\r\n      })\r\n      .then((data) => {\r\n        setUser(data?.msg);\r\n      })\r\n      .catch(() => {\r\n        // setError(error);\r\n      });\r\n  }, [data]);\r\n\r\n  console.log(typeof data?.files);\r\n\r\n  return (\r\n    <PageAuthentication>\r\n      <Layout title=\"Cart - Market\">\r\n        {data ? (\r\n          <div id=\"page-content\" style={{ margin: '60px 0px' }}>\r\n            <div className=\"page section-header text-center\">\r\n              <div className=\"page-title\">\r\n                <div className=\"wrapper\">\r\n                  <h1 className=\"page-width\">Your cart</h1>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"container\">\r\n              <div className=\"row\">\r\n                <div className=\"col-12 col-sm-12 col-md-8 col-lg-8 main-col mx-auto\">\r\n                  <div className=\"cart style2\">\r\n                    <div style={{ display: 'block' }}>\r\n                      <h2 style={{ fontSize: '1rem', fontWeight: 'bold' }}>\r\n                        {data?.category}\r\n                      </h2>\r\n                      <Card>\r\n                        <Carousel>\r\n                          {typeof data.files === 'string'\r\n                            ? JSON.parse(data.files)?.map((file, i) => (\r\n                                <Carousel.Item interval={4500} key={i}>\r\n                                  <img\r\n                                    className=\"d-block\"\r\n                                    src={`data:image/png;base64,${file}`}\r\n                                    alt=\"Image One\"\r\n                                    style={{ width: '100%' }}\r\n                                  />\r\n                                  <Carousel.Caption\r\n                                    style={{ background: '#e64c0066' }}\r\n                                  >\r\n                                    <h3>{data?.title} </h3>\r\n                                    <p\r\n                                      style={{\r\n                                        background: 'rgb(230 76 0)',\r\n                                        color: 'white',\r\n                                      }}\r\n                                    >\r\n                                      {' '}\r\n                                      {data?.description}{' '}\r\n                                    </p>\r\n                                  </Carousel.Caption>\r\n                                </Carousel.Item>\r\n                              ))\r\n                            : null}\r\n                        </Carousel>\r\n                        <Card.Body>\r\n                          <Card.Title>{data?.title}</Card.Title>\r\n                          <Card.Text>Material: {data?.material}</Card.Text>\r\n                          <small>Condition : {data?.conditions}</small>\r\n                        </Card.Body>\r\n                        <Card.Footer>\r\n                          <img src=\"https://img.icons8.com/ios-glyphs/30/null/user-location.png\" />\r\n                          {data?.location} {data?.state}\r\n                        </Card.Footer>\r\n                      </Card>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-12 col-sm-12 col-md-8 col-lg-4 cart__footer mx-auto\">\r\n                  <div className=\"cart style2 my-5 my-lg-0\">\r\n                    <h2 style={{ fontSize: '1rem', fontWeight: 'bold' }}>\r\n                      SELLER INFORMATION\r\n                    </h2>\r\n\r\n                    <div className=\"cart-note\">\r\n                      <div className=\"solid-border\">\r\n                        <h1>SELLER</h1>\r\n                        <hr />\r\n                        <h5>\r\n                          <label\r\n                            htmlFor=\"CartSpecialInstructions\"\r\n                            className=\"cart-note__label small--text-center flex align-items-center\"\r\n                          >\r\n                            <img\r\n                              src=\"https://img.icons8.com/plasticine/100/null/gender-neutral-user--v1.png\"\r\n                              width={50}\r\n                            />{' '}\r\n                            {user?.firstName} {user?.lastName}\r\n                          </label>\r\n                        </h5>\r\n                        <Link href=\"tel:2348134460259\">\r\n                          <button className=\"btn\">call : 2348134460259</button>\r\n                        </Link>{' '}\r\n                        <div className=\"row my-3\">\r\n                          <span className=\"col-6 col-sm-6 \">\r\n                            <strong>Price</strong>\r\n                          </span>\r\n                          <span className=\"col-6 col-sm-6 text-lg text-right\">\r\n                            <span className=\"money\">&#8358;{data?.price}</span>\r\n                          </span>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <Alert\r\n            key=\"danger\"\r\n            variant=\"danger\"\r\n            style={{ margin: '200px 100px' }}\r\n          >\r\n            loading...\r\n          </Alert>\r\n        )}\r\n      </Layout>\r\n    </PageAuthentication>\r\n  );\r\n}\r\n","C:\\Users\\mgenius\\Desktop\\PROGRAMMING\\CLIENT JOBS\\Teknesis_Kupon\\kupon_next\\pages\\register.js",["313","314"],[],"import React, { useState } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport Layout from '../components/Layout';\r\n// import { useMutation } from 'react-query';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { useRouter } from 'next/router';\r\nimport Link from 'next/link';\r\n\r\nexport default function Register() {\r\n  const [data, setData] = useState({});\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const router = useRouter();\r\n\r\n  const {\r\n    handleSubmit,\r\n    register,\r\n    formState: { errors },\r\n  } = useForm();\r\n\r\n  const handleInputChange = (e) => {\r\n    setData({ ...data, [e.target.name]: e.target.value });\r\n  };\r\n  const submitNewUser = async () => {\r\n    if (data.password !== '' && data.cpassword !== '') {\r\n      if (data.password == data.cpassword) {\r\n        // addUserMutation.mutate(data);\r\n        setIsLoading(true);\r\n        try {\r\n          const response = await fetch('/user/register', {\r\n            method: 'POST',\r\n            headers: {\r\n              'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(data),\r\n          });\r\n\r\n          if (!response.ok) {\r\n            const res = await response.json();\r\n            setIsLoading(false);\r\n            throw new Error(res.msg);\r\n          }\r\n          const res = await response.json();\r\n          toast.success('successful');\r\n          localStorage.setItem('token', res);\r\n          setIsLoading(false);\r\n          router.push('/');\r\n        } catch (err) {\r\n          setIsLoading(false);\r\n          toast.error(err.message);\r\n        }\r\n        // return res;\r\n      } else {\r\n        toast.error('password and confirm password are not equal');\r\n      }\r\n    } else {\r\n      toast.error('please fill in the details correctly');\r\n    }\r\n  };\r\n  return (\r\n    <Layout title=\"Register\">\r\n      <div id=\"page-content\">\r\n        <img\r\n          src=\"/images/kupon logo with text (1).png\"\r\n          width={100}\r\n          className=\"mx-4 my-2\"\r\n        />\r\n        <div className=\"page section-header text-center\">\r\n          <div className=\"page-title\">\r\n            <div className=\"wrapper\">\r\n              <h1 className=\"page-width\">Create an Account</h1>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-12 col-sm-12 col-md-6 col-lg-6 main-col offset-md-3\">\r\n              <div className=\"mb-4\">\r\n                <form\r\n                  onSubmit={handleSubmit(submitNewUser)}\r\n                  id=\"CustomerLoginForm\"\r\n                  className=\"contact-form\"\r\n                >\r\n                  <div className=\"row\">\r\n                    <div className=\"col-12 col-sm-12 col-md-12 col-lg-12\">\r\n                      <div className=\"form-group\">\r\n                        <label htmlFor=\"FirstName\">First Name *</label>\r\n                        <input\r\n                          type=\"text\"\r\n                          name=\"firstName\"\r\n                          placeholder=\"\"\r\n                          id=\"firstName\"\r\n                          required\r\n                          onChange={handleInputChange}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-12 col-md-12 col-lg-12\">\r\n                      <div className=\"form-group\">\r\n                        <label htmlFor=\"LastName\">Last Name *</label>\r\n                        <input\r\n                          type=\"text\"\r\n                          name=\"lastName\"\r\n                          placeholder=\"\"\r\n                          id=\"LastName\"\r\n                          required\r\n                          onChange={handleInputChange}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-12 col-md-12 col-lg-12\">\r\n                      <div className=\"form-group\">\r\n                        <label htmlFor=\"input-telephone\">\r\n                          Telephone <span className=\"required-f\">*</span>\r\n                        </label>\r\n                        <input\r\n                          name=\"telephone\"\r\n                          id=\"input-telephone\"\r\n                          type=\"tel\"\r\n                          required\r\n                          {...register('telephone', {\r\n                            required: 'Please enter telephone number',\r\n                            minLength: {\r\n                              value: 11,\r\n                              message:\r\n                                'telephone number must be exacty 11 numbers',\r\n                            },\r\n                            maxLength: {\r\n                              value: 11,\r\n                              message:\r\n                                'telephone number must be exacty 11 numbers',\r\n                            },\r\n                          })}\r\n                          onChange={handleInputChange}\r\n                        />\r\n                        {errors.telephone && (\r\n                          <div className=\"text-danger text-center\">\r\n                            {errors.telephone.message}\r\n                          </div>\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-12 col-md-12 col-lg-12\">\r\n                      <div className=\"form-group\">\r\n                        <label htmlFor=\"input-address-1\">\r\n                          Address <span className=\"required-f\">*</span>\r\n                        </label>\r\n                        <input\r\n                          name=\"address\"\r\n                          id=\"input-address-1\"\r\n                          type=\"text\"\r\n                          required\r\n                          onChange={handleInputChange}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-12 col-md-12 col-lg-12\">\r\n                      <div className=\"form-group\">\r\n                        <label htmlFor=\"CustomerEmail\">Email *</label>\r\n                        <input\r\n                          type=\"email\"\r\n                          name=\"email\"\r\n                          placeholder=\"\"\r\n                          {...register('email', {\r\n                            required: 'Please enter email',\r\n                            pattern: {\r\n                              value:\r\n                                /^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+.[a-zA-Z0-9-.]+$/i,\r\n                              message: 'Please enter valid email',\r\n                            },\r\n                          })}\r\n                          onChange={handleInputChange}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-12 col-md-12 col-lg-12\">\r\n                      <div className=\"form-group\">\r\n                        <label htmlFor=\"CustomerPassword\">Password *</label>\r\n                        <input\r\n                          type=\"password\"\r\n                          defaultValue=\"\"\r\n                          name=\"password\"\r\n                          id=\"password\"\r\n                          {...register('password', {\r\n                            required: 'Please enter password',\r\n                            minLength: {\r\n                              value: 6,\r\n                              message:\r\n                                'password should be more than 6 characters',\r\n                            },\r\n                          })}\r\n                          onChange={handleInputChange}\r\n                        />\r\n                        {errors.password && (\r\n                          <div className=\"text-danger text-center\">\r\n                            {errors.password.message}\r\n                          </div>\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-12 col-md-12 col-lg-12\">\r\n                      <div className=\"form-group\">\r\n                        <label htmlFor=\"CustomerPassword\">\r\n                          Confirm Password\r\n                        </label>\r\n                        <input\r\n                          type=\"password\"\r\n                          defaultValue=\"\"\r\n                          name=\"cpassword\"\r\n                          id=\"password\"\r\n                          placeholder=\"confirm password\"\r\n                          onChange={handleInputChange}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"row\">\r\n                    <div className=\"text-center col-12 col-sm-12 col-md-12 col-lg-12\">\r\n                      {isLoading ? (\r\n                        <input\r\n                          className=\"btn mb-3\"\r\n                          value=\"loading...\"\r\n                          disabled\r\n                        />\r\n                      ) : (\r\n                        <input\r\n                          type=\"submit\"\r\n                          className=\"btn mb-3\"\r\n                          value=\"submit\"\r\n                        />\r\n                      )}\r\n\r\n                      <p\r\n                        className=\"mb-4 text-center\"\r\n                        style={{ color: 'black', cursor: 'pointer' }}\r\n                      >\r\n                        {/* <a href=\"#\" id=\"RecoverPassword\">\r\n                          Forgot your password?\r\n                        </a>{' '}\r\n                        &nbsp; | &nbsp; */}\r\n                        Already a memeber ?{' '}\r\n                        <Link href=\"/login\" id=\"customer_register_link\">\r\n                          <b style={{ color: '#6e0000' }}>sign in </b>\r\n                        </Link>\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Layout>\r\n  );\r\n}\r\n","C:\\Users\\mgenius\\Desktop\\PROGRAMMING\\CLIENT JOBS\\Teknesis_Kupon\\kupon_next\\pages\\_app.js",[],[],"C:\\Users\\mgenius\\Desktop\\PROGRAMMING\\CLIENT JOBS\\Teknesis_Kupon\\kupon_next\\pages\\_document.js",["315","316","317","318","319","320","321"],[],"C:\\Users\\mgenius\\Desktop\\PROGRAMMING\\CLIENT JOBS\\Teknesis_Kupon\\kupon_next\\components\\admin\\Layout.js",["322","323","324","325","326","327","328","329","330","331","332","333","334","335","336","337"],[],"import React, { useRef, useState, useEffect, Fragment } from 'react';\r\nimport Link from 'next/link';\r\nimport { useRouter } from 'next/router';\r\nimport { getInitials, shortenString } from '../../utils/stringManipulation';\r\nimport jwtDecode from 'jwt-decode';\r\nimport logout from '../../utils/logout';\r\nimport PageAuthentication from '../../hooks/useAuth';\r\nimport Head from 'next/head';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nfunction UserLayout({ children }) {\r\n  const [token] = useState(() => {\r\n    if (typeof window !== 'undefined') {\r\n      return localStorage.getItem('token');\r\n    }\r\n  });\r\n  const [user, setUser] = useState();\r\n  const asideRef = useRef();\r\n  const router = useRouter();\r\n\r\n  useEffect(() => {\r\n    try {\r\n      let decoded = jwtDecode(token);\r\n      setUser(decoded);\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  }, [token]);\r\n\r\n  const userlogout = () => {\r\n    let out = logout();\r\n    if (out) router.push('/login');\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <Head>\r\n        <title>Admin - Kupon </title>\r\n        <meta httpEquiv=\"Content-Type\" content=\"text/html; charset=utf-8\" />\r\n        <meta httpEquiv=\"x-ua-compatible\" content=\"ie=edge\" />\r\n        <meta name=\"description\" content=\"description\" />\r\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\r\n        <link rel=\"shortcut icon\" href=\"/images/kupon icon.png\" />\r\n      </Head>\r\n      <ToastContainer position=\"bottom-center\" />\r\n      <PageAuthentication>\r\n        <main id=\"account\">\r\n          <aside ref={asideRef}>\r\n            <div className=\"profile\">\r\n              <span>\r\n                <span\r\n                  style={{\r\n                    color: 'white',\r\n                    backgroundColor: 'black',\r\n                    borderRadius: '50%',\r\n                    padding: '3px',\r\n                  }}\r\n                >\r\n                  {getInitials(user?.firstName, user?.lastName)}\r\n                </span>\r\n                <p>\r\n                  Admin -{' '}\r\n                  {shortenString(user?.firstName + ' ' + user?.lastName, 10)}\r\n                </p>\r\n              </span>\r\n\r\n              <img\r\n                id=\"cancel\"\r\n                src=\"https://img.icons8.com/ios/50/FD7E14/cancel.png\"\r\n                onClick={() => asideRef.current.classList.remove('menu')}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"side_links\">\r\n              <Link href=\"/\">\r\n                <span style={{ cursor: 'pointer' }}>\r\n                  <img\r\n                    src=\"https://img.icons8.com/ios-glyphs/30/FD7E14/home-page--v1.png\"\r\n                    className=\"icon\"\r\n                  />\r\n                  <b>Home</b>\r\n                </span>\r\n              </Link>\r\n\r\n              <Link href=\"profile\">\r\n                <span style={{ cursor: 'pointer' }}>\r\n                  <img\r\n                    src=\"https://img.icons8.com/material-outlined/24/FD7E14/user.png\"\r\n                    className=\"icon\"\r\n                  />\r\n                  <b>My Profile</b>\r\n                </span>\r\n              </Link>\r\n              {/* <Link href=\"/dashboard/admin\">\r\n                <span style={{ cursor: 'pointer' }}>\r\n                  <img\r\n                    src=\"https://img.icons8.com/material-outlined/24/FD7E14/dashboard-layout.png\"\r\n                    className=\"icon\"\r\n                  />\r\n                  <b>Chart</b>\r\n                </span>\r\n              </Link> */}\r\n              <Link href=\"user\">\r\n                <span style={{ cursor: 'pointer' }}>\r\n                  <img\r\n                    src=\"https://img.icons8.com/stickers/100/null/user-skin-type-3.png\"\r\n                    className=\"icon\"\r\n                  />\r\n                  <b>User</b>\r\n                </span>\r\n              </Link>\r\n\r\n              <Link href=\"logistics\">\r\n                <span style={{ cursor: 'pointer' }}>\r\n                  <img\r\n                    src=\"https://img.icons8.com/ios-glyphs/30/FD7E14/food-truck.png\"\r\n                    className=\"icon\"\r\n                  />\r\n                  <b>Logistics</b>\r\n                </span>\r\n              </Link>\r\n\r\n              <Link href=\"market\">\r\n                <span style={{ cursor: 'pointer' }}>\r\n                  <img\r\n                    src=\"https://img.icons8.com/material-outlined/24/FD7E14/shopping-cart--v1.png\"\r\n                    className=\"icon\"\r\n                  />\r\n                  <b>Market</b>\r\n                </span>\r\n              </Link>\r\n\r\n              <span style={{ cursor: 'pointer' }} onClick={() => userlogout()}>\r\n                <img\r\n                  src=\"https://img.icons8.com/ios/50/FD7E14/logout-rounded--v1.png\"\r\n                  className=\"icon\"\r\n                />\r\n                <b>Logout</b>\r\n              </span>\r\n            </div>\r\n          </aside>\r\n\r\n          <section className=\"main_container\">\r\n            <header>\r\n              <div>\r\n                <img\r\n                  id=\"menu\"\r\n                  src=\"https://img.icons8.com/ios-filled/50/000000/menu--v1.png\"\r\n                  onClick={() => asideRef.current.classList.add('menu')}\r\n                />\r\n\r\n                <h3>Admin - Settings</h3>\r\n                <p style={{ opacity: '0.7' }}>\r\n                  Manage your personal and organization settings\r\n                </p>\r\n              </div>\r\n            </header>\r\n\r\n            <article>{children}</article>\r\n          </section>\r\n        </main>\r\n      </PageAuthentication>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default UserLayout;\r\n","C:\\Users\\mgenius\\Desktop\\PROGRAMMING\\CLIENT JOBS\\Teknesis_Kupon\\kupon_next\\components\\chart.js",[],[],"C:\\Users\\mgenius\\Desktop\\PROGRAMMING\\CLIENT JOBS\\Teknesis_Kupon\\kupon_next\\components\\Confirmation.js",[],[],"C:\\Users\\mgenius\\Desktop\\PROGRAMMING\\CLIENT JOBS\\Teknesis_Kupon\\kupon_next\\components\\Footer.js",[],[],"C:\\Users\\mgenius\\Desktop\\PROGRAMMING\\CLIENT JOBS\\Teknesis_Kupon\\kupon_next\\components\\Layout.js",[],[],"C:\\Users\\mgenius\\Desktop\\PROGRAMMING\\CLIENT JOBS\\Teknesis_Kupon\\kupon_next\\components\\mainNav\\mainHeader.js",["338"],[],"import React from 'react';\r\nimport { Navbar, Nav } from 'react-bootstrap';\r\n\r\nexport default function MainHeader() {\r\n  return (\r\n    <>\r\n      <Navbar bg=\"light\" expand=\"md\" className=\"py-3\">\r\n        <Navbar.Brand href=\"#home\">\r\n          <img\r\n            src=\"/images/kupon logo with text (1).png\"\r\n            width=\"80\"\r\n            className=\"d-inline-block align-top\"\r\n            alt=\"Your Logo\"\r\n          />\r\n        </Navbar.Brand>\r\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n        <Navbar.Collapse id=\"basic-navbar-nav\">\r\n          <Nav className=\"ml-auto\">\r\n            <Nav.Link href=\"/\" className=\"text-uppercase mx-3\">\r\n              Home\r\n            </Nav.Link>\r\n            <Nav.Link href=\"/about#about\" className=\"text-uppercase mx-3\">\r\n              About Us\r\n            </Nav.Link>\r\n            <Nav.Link href=\"/contact\" className=\"text-uppercase mx-3\">\r\n              Contact Us\r\n            </Nav.Link>\r\n            <Nav.Link href=\"/logistics\" className=\"text-uppercase mx-3\">\r\n              Logistics\r\n            </Nav.Link>\r\n            <Nav.Link\r\n              href=\"/market#marketcollection\"\r\n              className=\"text-uppercase mx-3\"\r\n            >\r\n              Market Place\r\n            </Nav.Link>\r\n          </Nav>\r\n        </Navbar.Collapse>\r\n      </Navbar>\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\mgenius\\Desktop\\PROGRAMMING\\CLIENT JOBS\\Teknesis_Kupon\\kupon_next\\components\\mainNav\\mobileHeader.js",[],[],"C:\\Users\\mgenius\\Desktop\\PROGRAMMING\\CLIENT JOBS\\Teknesis_Kupon\\kupon_next\\components\\mainNav\\Nav.js",[],[],"C:\\Users\\mgenius\\Desktop\\PROGRAMMING\\CLIENT JOBS\\Teknesis_Kupon\\kupon_next\\components\\mainNav\\search.js",[],[],"C:\\Users\\mgenius\\Desktop\\PROGRAMMING\\CLIENT JOBS\\Teknesis_Kupon\\kupon_next\\components\\mainNav\\topHeader.js",[],[],"C:\\Users\\mgenius\\Desktop\\PROGRAMMING\\CLIENT JOBS\\Teknesis_Kupon\\kupon_next\\components\\marketNav\\mainHeader.js",["339","340","341","342","343","344","345","346","347","348","349","350"],[],"C:\\Users\\mgenius\\Desktop\\PROGRAMMING\\CLIENT JOBS\\Teknesis_Kupon\\kupon_next\\components\\marketNav\\mobileHeader.js",[],[],"C:\\Users\\mgenius\\Desktop\\PROGRAMMING\\CLIENT JOBS\\Teknesis_Kupon\\kupon_next\\components\\marketNav\\Nav.js",[],[],"C:\\Users\\mgenius\\Desktop\\PROGRAMMING\\CLIENT JOBS\\Teknesis_Kupon\\kupon_next\\components\\marketNav\\search.js",[],[],"C:\\Users\\mgenius\\Desktop\\PROGRAMMING\\CLIENT JOBS\\Teknesis_Kupon\\kupon_next\\components\\marketNav\\topHeader.js",[],[],"C:\\Users\\mgenius\\Desktop\\PROGRAMMING\\CLIENT JOBS\\Teknesis_Kupon\\kupon_next\\components\\nav\\mainHeader.js",["351","352","353","354","355","356","357","358","359","360","361","362","363"],[],"C:\\Users\\mgenius\\Desktop\\PROGRAMMING\\CLIENT JOBS\\Teknesis_Kupon\\kupon_next\\components\\nav\\mobileHeader.js",[],[],"C:\\Users\\mgenius\\Desktop\\PROGRAMMING\\CLIENT JOBS\\Teknesis_Kupon\\kupon_next\\components\\nav\\Nav.js",[],[],"C:\\Users\\mgenius\\Desktop\\PROGRAMMING\\CLIENT JOBS\\Teknesis_Kupon\\kupon_next\\components\\nav\\search.js",[],[],"C:\\Users\\mgenius\\Desktop\\PROGRAMMING\\CLIENT JOBS\\Teknesis_Kupon\\kupon_next\\components\\nav\\topHeader.js",[],[],"C:\\Users\\mgenius\\Desktop\\PROGRAMMING\\CLIENT JOBS\\Teknesis_Kupon\\kupon_next\\components\\user\\Layout.js",["364","365","366","367","368","369","370","371","372","373","374","375","376","377"],[],"import React, { useRef, useState, useEffect, Fragment } from 'react';\r\nimport Link from 'next/link';\r\nimport { useRouter } from 'next/router';\r\nimport { getInitials, shortenString } from '../../utils/stringManipulation';\r\nimport jwtDecode from 'jwt-decode';\r\nimport logout from '../../utils/logout';\r\nimport PageAuthentication from '../../hooks/useAuth';\r\nimport Head from 'next/head';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nfunction UserLayout({ children }) {\r\n  const [token] = useState(() => {\r\n    if (typeof window !== 'undefined') {\r\n      return localStorage.getItem('token');\r\n    }\r\n  });\r\n  const [user, setUser] = useState();\r\n  const asideRef = useRef();\r\n  const router = useRouter();\r\n\r\n  useEffect(() => {\r\n    try {\r\n      let decoded = jwtDecode(token);\r\n      setUser(decoded);\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  }, [token]);\r\n\r\n  const userlogout = () => {\r\n    let out = logout();\r\n    if (out) router.push('/login');\r\n  };\r\n  return (\r\n    <Fragment>\r\n      <Head>\r\n        <title>User - Kupon </title>\r\n        <meta httpEquiv=\"Content-Type\" content=\"text/html; charset=utf-8\" />\r\n        <meta httpEquiv=\"x-ua-compatible\" content=\"ie=edge\" />\r\n        <meta name=\"description\" content=\"description\" />\r\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\r\n        <link rel=\"shortcut icon\" href=\"/images/kupon icon.png\" />\r\n      </Head>\r\n      <ToastContainer position=\"bottom-center\" />\r\n      <PageAuthentication>\r\n        <main id=\"account\">\r\n          <aside ref={asideRef}>\r\n            <div className=\"profile\">\r\n              <span>\r\n                <span\r\n                  style={{\r\n                    color: 'white',\r\n                    backgroundColor: 'black',\r\n                    borderRadius: '50%',\r\n                    padding: '3px',\r\n                  }}\r\n                >\r\n                  {getInitials(user?.firstName, user?.lastName)}\r\n                </span>\r\n                <p>\r\n                  {shortenString(user?.firstName + ' ' + user?.lastName, 15)}\r\n                </p>\r\n              </span>\r\n\r\n              <img\r\n                id=\"cancel\"\r\n                src=\"https://img.icons8.com/ios/50/FD7E14/cancel.png\"\r\n                onClick={() => asideRef.current.classList.remove('menu')}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"side_links\">\r\n              <Link href=\"/\">\r\n                <span style={{ cursor: 'pointer' }}>\r\n                  <img\r\n                    src=\"https://img.icons8.com/ios-glyphs/30/FD7E14/home-page--v1.png\"\r\n                    className=\"icon\"\r\n                  />\r\n                  <b>Home</b>\r\n                </span>\r\n              </Link>\r\n\r\n              <Link href=\"profile\">\r\n                <span style={{ cursor: 'pointer' }}>\r\n                  <img\r\n                    src=\"https://img.icons8.com/material-outlined/24/FD7E14/user.png\"\r\n                    className=\"icon\"\r\n                  />\r\n                  <b>Profile</b>\r\n                </span>\r\n              </Link>\r\n\r\n              <Link href=\"logistics\">\r\n                <span style={{ cursor: 'pointer' }}>\r\n                  <img\r\n                    src=\"https://img.icons8.com/material-outlined/24/FD7E14/dashboard-layout.png\"\r\n                    className=\"icon\"\r\n                  />\r\n                  <b>Logistics</b>\r\n                </span>\r\n              </Link>\r\n\r\n              <Link href=\"market\">\r\n                <span style={{ cursor: 'pointer' }}>\r\n                  <img\r\n                    src=\"https://img.icons8.com/material-outlined/24/FD7E14/dashboard-layout.png\"\r\n                    className=\"icon\"\r\n                  />\r\n                  <b>Market</b>\r\n                </span>\r\n              </Link>\r\n\r\n              {/* <Link href=\"notification\">\r\n                <span style={{ cursor: 'pointer' }}>\r\n                  <img\r\n                    src=\"https://img.icons8.com/ios/50/FD7E14/push-notifications.png\"\r\n                    className=\"icon\"\r\n                  />\r\n                  <b>Notification</b>\r\n                </span>\r\n              </Link> */}\r\n\r\n              <span style={{ cursor: 'pointer' }} onClick={() => userlogout()}>\r\n                <img\r\n                  src=\"https://img.icons8.com/ios/50/FD7E14/logout-rounded--v1.png\"\r\n                  className=\"icon\"\r\n                />\r\n                <b>Logout</b>\r\n              </span>\r\n              {/* <span>\r\n              <img src={collapse} className=\"icon\" alt=\"lynue home\" />\r\n              <b>Collapse</b>\r\n            </span> */}\r\n            </div>\r\n          </aside>\r\n\r\n          <section className=\"main_container\">\r\n            <header>\r\n              <div>\r\n                <img\r\n                  id=\"menu\"\r\n                  src=\"https://img.icons8.com/ios-filled/50/000000/menu--v1.png\"\r\n                  onClick={() => asideRef.current.classList.add('menu')}\r\n                />\r\n                {/* <div className=\"alert alert-primary\" role=\"alert\">\r\n                <h3 className=\"h1 text-center\"> Admin</h3>\r\n              </div> */}\r\n                <h3>User - Settings</h3>\r\n                <p style={{ opacity: '0.7' }}>Manage your personal settings</p>\r\n              </div>\r\n              {/* <nav>\r\n                <ul style={{ listStyle: 'none', margin: '10px' }}>\r\n                  <li style={{ margin: '10px' }}>\r\n                    <Link href=\"profile\">Profile</Link>\r\n                  </li>\r\n                  <li style={{ margin: '10px' }}>\r\n                    <Link href=\"password\">Password</Link>\r\n                  </li>\r\n                </ul>\r\n              </nav> */}\r\n            </header>\r\n\r\n            <article>{children}</article>\r\n          </section>\r\n        </main>\r\n      </PageAuthentication>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default UserLayout;\r\n",{"ruleId":"378","severity":1,"message":"379","line":18,"column":17,"nodeType":"380","endLine":29,"endColumn":19},{"ruleId":"378","severity":1,"message":"379","line":42,"column":25,"nodeType":"380","endLine":46,"endColumn":27},{"ruleId":"381","severity":1,"message":"382","line":42,"column":25,"nodeType":"380","endLine":46,"endColumn":27},{"ruleId":"378","severity":1,"message":"379","line":54,"column":17,"nodeType":"380","endLine":65,"endColumn":19},{"ruleId":"378","severity":1,"message":"379","line":79,"column":25,"nodeType":"380","endLine":83,"endColumn":27},{"ruleId":"381","severity":1,"message":"382","line":79,"column":25,"nodeType":"380","endLine":83,"endColumn":27},{"ruleId":"378","severity":1,"message":"379","line":65,"column":9,"nodeType":"380","endLine":69,"endColumn":11},{"ruleId":"381","severity":1,"message":"382","line":65,"column":9,"nodeType":"380","endLine":69,"endColumn":11},{"ruleId":"383","severity":1,"message":"384","line":53,"column":6,"nodeType":"385","endLine":53,"endColumn":8,"suggestions":"386"},{"ruleId":"378","severity":1,"message":"379","line":183,"column":23,"nodeType":"380","endLine":188,"endColumn":25},{"ruleId":"383","severity":1,"message":"384","line":43,"column":6,"nodeType":"385","endLine":43,"endColumn":8,"suggestions":"387"},{"ruleId":"378","severity":1,"message":"379","line":135,"column":23,"nodeType":"380","endLine":140,"endColumn":25},{"ruleId":"383","severity":1,"message":"384","line":43,"column":6,"nodeType":"385","endLine":43,"endColumn":8,"suggestions":"388"},{"ruleId":"378","severity":1,"message":"379","line":17,"column":13,"nodeType":"380","endLine":20,"endColumn":15},{"ruleId":"378","severity":1,"message":"379","line":32,"column":13,"nodeType":"380","endLine":36,"endColumn":15},{"ruleId":"381","severity":1,"message":"382","line":32,"column":13,"nodeType":"380","endLine":36,"endColumn":15},{"ruleId":"378","severity":1,"message":"379","line":41,"column":15,"nodeType":"380","endLine":44,"endColumn":17},{"ruleId":"381","severity":1,"message":"382","line":41,"column":15,"nodeType":"380","endLine":44,"endColumn":17},{"ruleId":"378","severity":1,"message":"379","line":50,"column":15,"nodeType":"380","endLine":53,"endColumn":17},{"ruleId":"381","severity":1,"message":"382","line":50,"column":15,"nodeType":"380","endLine":53,"endColumn":17},{"ruleId":"378","severity":1,"message":"379","line":57,"column":15,"nodeType":"380","endLine":60,"endColumn":17},{"ruleId":"381","severity":1,"message":"382","line":57,"column":15,"nodeType":"380","endLine":60,"endColumn":17},{"ruleId":"378","severity":1,"message":"379","line":65,"column":15,"nodeType":"380","endLine":68,"endColumn":17},{"ruleId":"381","severity":1,"message":"382","line":65,"column":15,"nodeType":"380","endLine":68,"endColumn":17},{"ruleId":"378","severity":1,"message":"379","line":73,"column":15,"nodeType":"380","endLine":76,"endColumn":17},{"ruleId":"381","severity":1,"message":"382","line":73,"column":15,"nodeType":"380","endLine":76,"endColumn":17},{"ruleId":"378","severity":1,"message":"379","line":89,"column":15,"nodeType":"380","endLine":93,"endColumn":17},{"ruleId":"381","severity":1,"message":"382","line":89,"column":15,"nodeType":"380","endLine":93,"endColumn":17},{"ruleId":"383","severity":1,"message":"384","line":36,"column":6,"nodeType":"385","endLine":36,"endColumn":8,"suggestions":"389"},{"ruleId":"383","severity":1,"message":"390","line":45,"column":6,"nodeType":"385","endLine":45,"endColumn":8,"suggestions":"391"},{"ruleId":"378","severity":1,"message":"379","line":104,"column":29,"nodeType":"380","endLine":109,"endColumn":31},{"ruleId":"378","severity":1,"message":"379","line":21,"column":17,"nodeType":"380","endLine":32,"endColumn":19},{"ruleId":"378","severity":1,"message":"379","line":45,"column":25,"nodeType":"380","endLine":49,"endColumn":27},{"ruleId":"381","severity":1,"message":"382","line":45,"column":25,"nodeType":"380","endLine":49,"endColumn":27},{"ruleId":"378","severity":1,"message":"379","line":57,"column":17,"nodeType":"380","endLine":68,"endColumn":19},{"ruleId":"378","severity":1,"message":"379","line":82,"column":25,"nodeType":"380","endLine":86,"endColumn":27},{"ruleId":"381","severity":1,"message":"382","line":82,"column":25,"nodeType":"380","endLine":86,"endColumn":27},{"ruleId":"378","severity":1,"message":"379","line":132,"column":17,"nodeType":"380","endLine":136,"endColumn":19},{"ruleId":"378","severity":1,"message":"379","line":153,"column":17,"nodeType":"380","endLine":157,"endColumn":19},{"ruleId":"378","severity":1,"message":"379","line":245,"column":17,"nodeType":"380","endLine":249,"endColumn":19},{"ruleId":"378","severity":1,"message":"379","line":49,"column":9,"nodeType":"380","endLine":53,"endColumn":11},{"ruleId":"381","severity":1,"message":"382","line":49,"column":9,"nodeType":"380","endLine":53,"endColumn":11},{"ruleId":"378","severity":1,"message":"379","line":136,"column":21,"nodeType":"380","endLine":145,"endColumn":23},{"ruleId":"378","severity":1,"message":"379","line":148,"column":21,"nodeType":"380","endLine":157,"endColumn":23},{"ruleId":"378","severity":1,"message":"379","line":266,"column":15,"nodeType":"380","endLine":270,"endColumn":17},{"ruleId":"383","severity":1,"message":"392","line":26,"column":6,"nodeType":"385","endLine":26,"endColumn":21,"suggestions":"393"},{"ruleId":"383","severity":1,"message":"394","line":47,"column":14,"nodeType":"395","endLine":47,"endColumn":30},{"ruleId":"378","severity":1,"message":"379","line":76,"column":19,"nodeType":"380","endLine":87,"endColumn":21},{"ruleId":"378","severity":1,"message":"379","line":110,"column":19,"nodeType":"380","endLine":121,"endColumn":21},{"ruleId":"378","severity":1,"message":"379","line":180,"column":33,"nodeType":"380","endLine":191,"endColumn":35},{"ruleId":"378","severity":1,"message":"379","line":194,"column":33,"nodeType":"380","endLine":209,"endColumn":35},{"ruleId":"383","severity":1,"message":"392","line":32,"column":6,"nodeType":"385","endLine":32,"endColumn":21,"suggestions":"396"},{"ruleId":"378","severity":1,"message":"379","line":61,"column":13,"nodeType":"380","endLine":72,"endColumn":15},{"ruleId":"378","severity":1,"message":"379","line":77,"column":19,"nodeType":"380","endLine":80,"endColumn":21},{"ruleId":"381","severity":1,"message":"382","line":77,"column":19,"nodeType":"380","endLine":80,"endColumn":21},{"ruleId":"378","severity":1,"message":"379","line":93,"column":13,"nodeType":"380","endLine":104,"endColumn":15},{"ruleId":"378","severity":1,"message":"379","line":109,"column":19,"nodeType":"380","endLine":112,"endColumn":21},{"ruleId":"381","severity":1,"message":"382","line":109,"column":19,"nodeType":"380","endLine":112,"endColumn":21},{"ruleId":"378","severity":1,"message":"379","line":139,"column":11,"nodeType":"380","endLine":142,"endColumn":13},{"ruleId":"381","severity":1,"message":"382","line":139,"column":11,"nodeType":"380","endLine":142,"endColumn":13},{"ruleId":"378","severity":1,"message":"379","line":238,"column":25,"nodeType":"380","endLine":249,"endColumn":27},{"ruleId":"378","severity":1,"message":"379","line":252,"column":25,"nodeType":"380","endLine":267,"endColumn":27},{"ruleId":"383","severity":1,"message":"397","line":39,"column":6,"nodeType":"385","endLine":39,"endColumn":15,"suggestions":"398"},{"ruleId":"383","severity":1,"message":"390","line":60,"column":6,"nodeType":"385","endLine":60,"endColumn":12,"suggestions":"399"},{"ruleId":"378","severity":1,"message":"379","line":90,"column":35,"nodeType":"380","endLine":95,"endColumn":37},{"ruleId":"378","severity":1,"message":"379","line":120,"column":27,"nodeType":"380","endLine":120,"endColumn":100},{"ruleId":"381","severity":1,"message":"382","line":120,"column":27,"nodeType":"380","endLine":120,"endColumn":100},{"ruleId":"378","severity":1,"message":"379","line":142,"column":29,"nodeType":"380","endLine":145,"endColumn":31},{"ruleId":"381","severity":1,"message":"382","line":142,"column":29,"nodeType":"380","endLine":145,"endColumn":31},{"ruleId":"378","severity":1,"message":"379","line":64,"column":9,"nodeType":"380","endLine":68,"endColumn":11},{"ruleId":"381","severity":1,"message":"382","line":64,"column":9,"nodeType":"380","endLine":68,"endColumn":11},{"ruleId":"400","severity":1,"message":"401","line":38,"column":11,"nodeType":"380","endLine":38,"endColumn":61},{"ruleId":"400","severity":1,"message":"401","line":39,"column":11,"nodeType":"380","endLine":39,"endColumn":63},{"ruleId":"400","severity":1,"message":"401","line":40,"column":11,"nodeType":"380","endLine":40,"endColumn":69},{"ruleId":"400","severity":1,"message":"401","line":41,"column":11,"nodeType":"380","endLine":41,"endColumn":63},{"ruleId":"400","severity":1,"message":"401","line":42,"column":11,"nodeType":"380","endLine":42,"endColumn":67},{"ruleId":"400","severity":1,"message":"401","line":43,"column":11,"nodeType":"380","endLine":43,"endColumn":63},{"ruleId":"400","severity":1,"message":"401","line":44,"column":11,"nodeType":"380","endLine":44,"endColumn":66},{"ruleId":"378","severity":1,"message":"379","line":68,"column":15,"nodeType":"380","endLine":72,"endColumn":17},{"ruleId":"381","severity":1,"message":"382","line":68,"column":15,"nodeType":"380","endLine":72,"endColumn":17},{"ruleId":"378","severity":1,"message":"379","line":78,"column":19,"nodeType":"380","endLine":81,"endColumn":21},{"ruleId":"381","severity":1,"message":"382","line":78,"column":19,"nodeType":"380","endLine":81,"endColumn":21},{"ruleId":"378","severity":1,"message":"379","line":88,"column":19,"nodeType":"380","endLine":91,"endColumn":21},{"ruleId":"381","severity":1,"message":"382","line":88,"column":19,"nodeType":"380","endLine":91,"endColumn":21},{"ruleId":"378","severity":1,"message":"379","line":106,"column":19,"nodeType":"380","endLine":109,"endColumn":21},{"ruleId":"381","severity":1,"message":"382","line":106,"column":19,"nodeType":"380","endLine":109,"endColumn":21},{"ruleId":"378","severity":1,"message":"379","line":116,"column":19,"nodeType":"380","endLine":119,"endColumn":21},{"ruleId":"381","severity":1,"message":"382","line":116,"column":19,"nodeType":"380","endLine":119,"endColumn":21},{"ruleId":"378","severity":1,"message":"379","line":126,"column":19,"nodeType":"380","endLine":129,"endColumn":21},{"ruleId":"381","severity":1,"message":"382","line":126,"column":19,"nodeType":"380","endLine":129,"endColumn":21},{"ruleId":"378","severity":1,"message":"379","line":135,"column":17,"nodeType":"380","endLine":138,"endColumn":19},{"ruleId":"381","severity":1,"message":"382","line":135,"column":17,"nodeType":"380","endLine":138,"endColumn":19},{"ruleId":"378","severity":1,"message":"379","line":147,"column":17,"nodeType":"380","endLine":151,"endColumn":19},{"ruleId":"381","severity":1,"message":"382","line":147,"column":17,"nodeType":"380","endLine":151,"endColumn":19},{"ruleId":"378","severity":1,"message":"379","line":9,"column":11,"nodeType":"380","endLine":14,"endColumn":13},{"ruleId":"378","severity":1,"message":"379","line":49,"column":11,"nodeType":"380","endLine":53,"endColumn":13},{"ruleId":"381","severity":1,"message":"382","line":49,"column":11,"nodeType":"380","endLine":53,"endColumn":13},{"ruleId":"378","severity":1,"message":"379","line":118,"column":17,"nodeType":"380","endLine":123,"endColumn":19},{"ruleId":"378","severity":1,"message":"379","line":134,"column":19,"nodeType":"380","endLine":138,"endColumn":21},{"ruleId":"381","severity":1,"message":"382","line":134,"column":19,"nodeType":"380","endLine":138,"endColumn":21},{"ruleId":"378","severity":1,"message":"379","line":194,"column":19,"nodeType":"380","endLine":199,"endColumn":21},{"ruleId":"378","severity":1,"message":"379","line":276,"column":37,"nodeType":"380","endLine":279,"endColumn":39},{"ruleId":"381","severity":1,"message":"382","line":276,"column":37,"nodeType":"380","endLine":279,"endColumn":39},{"ruleId":"378","severity":1,"message":"379","line":291,"column":35,"nodeType":"380","endLine":294,"endColumn":37},{"ruleId":"381","severity":1,"message":"382","line":291,"column":35,"nodeType":"380","endLine":294,"endColumn":37},{"ruleId":"378","severity":1,"message":"379","line":306,"column":33,"nodeType":"380","endLine":309,"endColumn":35},{"ruleId":"381","severity":1,"message":"382","line":306,"column":33,"nodeType":"380","endLine":309,"endColumn":35},{"ruleId":"383","severity":1,"message":"390","line":26,"column":6,"nodeType":"385","endLine":26,"endColumn":8,"suggestions":"402"},{"ruleId":"378","severity":1,"message":"379","line":48,"column":11,"nodeType":"380","endLine":52,"endColumn":13},{"ruleId":"381","severity":1,"message":"382","line":48,"column":11,"nodeType":"380","endLine":52,"endColumn":13},{"ruleId":"378","severity":1,"message":"379","line":104,"column":17,"nodeType":"380","endLine":109,"endColumn":19},{"ruleId":"378","severity":1,"message":"379","line":120,"column":19,"nodeType":"380","endLine":124,"endColumn":21},{"ruleId":"381","severity":1,"message":"382","line":120,"column":19,"nodeType":"380","endLine":124,"endColumn":21},{"ruleId":"378","severity":1,"message":"379","line":170,"column":19,"nodeType":"380","endLine":175,"endColumn":21},{"ruleId":"378","severity":1,"message":"379","line":252,"column":37,"nodeType":"380","endLine":255,"endColumn":39},{"ruleId":"381","severity":1,"message":"382","line":252,"column":37,"nodeType":"380","endLine":255,"endColumn":39},{"ruleId":"378","severity":1,"message":"379","line":267,"column":35,"nodeType":"380","endLine":270,"endColumn":37},{"ruleId":"381","severity":1,"message":"382","line":267,"column":35,"nodeType":"380","endLine":270,"endColumn":37},{"ruleId":"378","severity":1,"message":"379","line":282,"column":33,"nodeType":"380","endLine":285,"endColumn":35},{"ruleId":"381","severity":1,"message":"382","line":282,"column":33,"nodeType":"380","endLine":285,"endColumn":35},{"ruleId":"378","severity":1,"message":"379","line":66,"column":15,"nodeType":"380","endLine":70,"endColumn":17},{"ruleId":"381","severity":1,"message":"382","line":66,"column":15,"nodeType":"380","endLine":70,"endColumn":17},{"ruleId":"378","severity":1,"message":"379","line":76,"column":19,"nodeType":"380","endLine":79,"endColumn":21},{"ruleId":"381","severity":1,"message":"382","line":76,"column":19,"nodeType":"380","endLine":79,"endColumn":21},{"ruleId":"378","severity":1,"message":"379","line":86,"column":19,"nodeType":"380","endLine":89,"endColumn":21},{"ruleId":"381","severity":1,"message":"382","line":86,"column":19,"nodeType":"380","endLine":89,"endColumn":21},{"ruleId":"378","severity":1,"message":"379","line":96,"column":19,"nodeType":"380","endLine":99,"endColumn":21},{"ruleId":"381","severity":1,"message":"382","line":96,"column":19,"nodeType":"380","endLine":99,"endColumn":21},{"ruleId":"378","severity":1,"message":"379","line":106,"column":19,"nodeType":"380","endLine":109,"endColumn":21},{"ruleId":"381","severity":1,"message":"382","line":106,"column":19,"nodeType":"380","endLine":109,"endColumn":21},{"ruleId":"378","severity":1,"message":"379","line":125,"column":17,"nodeType":"380","endLine":128,"endColumn":19},{"ruleId":"381","severity":1,"message":"382","line":125,"column":17,"nodeType":"380","endLine":128,"endColumn":19},{"ruleId":"378","severity":1,"message":"379","line":141,"column":17,"nodeType":"380","endLine":145,"endColumn":19},{"ruleId":"381","severity":1,"message":"382","line":141,"column":17,"nodeType":"380","endLine":145,"endColumn":19},"@next/next/no-img-element","Do not use `<img>` element. Use `<Image />` from `next/image` instead. See: https://nextjs.org/docs/messages/no-img-element","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'data' and 'token'. Either include them or remove the dependency array.","ArrayExpression",["403"],["404"],["405"],["406"],"React Hook useEffect has a missing dependency: 'token'. Either include it or remove the dependency array.",["407"],"React Hook useEffect has missing dependencies: 'data' and 'fileUploadError'. Either include them or remove the dependency array. You can also do a functional update 'setData(d => ...)' if you only need 'data' in the 'setData' call.",["408"],"Assignments to the 'data' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression",["409"],"React Hook useEffect has missing dependencies: 'error' and 'token'. Either include them or remove the dependency array. You can also do a functional update 'setError(e => ...)' if you only need 'error' in the 'setError' call.",["410"],["411"],"@next/next/no-css-tags","Do not include stylesheets manually. See: https://nextjs.org/docs/messages/no-css-tags",["412"],{"desc":"413","fix":"414"},{"desc":"413","fix":"415"},{"desc":"413","fix":"416"},{"desc":"413","fix":"417"},{"desc":"418","fix":"419"},{"desc":"420","fix":"421"},{"desc":"420","fix":"422"},{"desc":"423","fix":"424"},{"desc":"413","fix":"425"},{"desc":"418","fix":"426"},"Update the dependencies array to be: [data, token]",{"range":"427","text":"428"},{"range":"429","text":"428"},{"range":"430","text":"428"},{"range":"431","text":"428"},"Update the dependencies array to be: [token]",{"range":"432","text":"433"},"Update the dependencies array to be: [data, fileUploadError, filesToUpload]",{"range":"434","text":"435"},{"range":"436","text":"435"},"Update the dependencies array to be: [error, product, token]",{"range":"437","text":"438"},{"range":"439","text":"428"},{"range":"440","text":"433"},[1805,1807],"[data, token]",[1321,1323],[1298,1300],[1042,1044],[1439,1441],"[token]",[967,982],"[data, fileUploadError, filesToUpload]",[1018,1033],[1130,1139],"[error, product, token]",[1609,1615],[803,805]]